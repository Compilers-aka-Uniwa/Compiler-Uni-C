START = SZ

SZ:
    A-Z -> SID0         // Αν το χαρακτήρας είναι κεφαλαίο γράμμα, μετάβαση στην κατάσταση SID0
    _   -> SID0         // Αν το χαρακτήρας είναι '_' (κάτω παύλα), μετάβαση στην κατάσταση SID0
    a-z -> SID0         // Αν το χαρακτήρας είναι πεζό γράμμα, μετάβαση στην κατάσταση SID0
    
    "   -> SSTR0        // Αν αναγνωριστεί το διπλό εισαγωγικό, μετάβαση στην κατάσταση SSTR0
    \n  -> SWH0        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση SWH0
    /t  -> SWH0        // Αν αναγνωριστεί tab, μετάβαση στην κατάσταση SWH0
    /s  -> SWH0        // Αν αναγνωριστεί κενό, μετάβαση στην κατάσταση SWH0
    /r  -> SWH0        // Αν αναγνωριστεί carriage return, μετάβαση στην κατάσταση SWH0

    0   -> SINT0        // Αν ο χαρακτήρας είναι "0", μετάβαση στην κατάσταση SINT0
    1-9 -> SINT1        // Αν ο χαρακτήρας είναι ψηφίο από 1 έως 9, μετάβαση στην κατάσταση SINT1
    -   -> SFL1         // Αν ο χαρακτήρας είναι "-", μετάβαση στην κατάσταση SFL1
    /   -> SC0          // Αν ο χαρακτήρας είναι "/", μετάβαση στην κατάσταση SC0

SID0:
    \n ->  GID          // Αν ο χαρακτήρας είναι αλλαγή γραμμής, μετάβαση στην κατάσταση GID
    _ ->   SID0         // Αν ο χαρακτήρας είναι '_' (κάτω παύλα), παραμονή στην ίδια κατάσταση SID0
    A-Z -> SID0         // Αν ο χαρακτήρας είναι κεφαλαίο γράμμα, παραμονή στην ίδια κατάσταση SID0
    a-z -> SID0         // Αν ο χαρακτήρας είναι πεζό γράμμα, παραμονή στην ίδια κατάσταση SID0
    0-9 -> SID0         // Αν ο χαρακτήρας είναι ψηφίο, παραμονή στην ίδια κατάσταση SID0

GID:
    EOF -> GOOD         // Κατάσταση επιτυχίας

SSTR0:
   * -> SSTR0          // Αν αναγνωριστεί οποιοσδήποτε χαρακτήρας, παραμονή στην ίδια κατάσταση SSTR0
   " -> SSTR1          // Αν αναγνωριστεί διπλό εισαγωγικό, μετάβαση στην κατάσταση SSTR1
   / -> SSTR2          // Αν αναγνωριστεί "/", μετάβαση στην κατάσταση SSTR2

SSTR1:
   \n -> GSTR          // Αν αναγνωριστεί αλλαγή γραμμής μετά το διπλό εισαγωγικό, μετάβαση στην κατάσταση GSTR

SSTR2:
  \"n -> SSTR3         // Αν αναγνωριστεί η ακολουθία \"n, μετάβαση στην κατάσταση SSTR3

SSTR3:
    * -> SSTR3         // Αν αναγνωριστεί οποιοσδήποτε χαρακτήρας, παραμονή στην ίδια κατάσταση SSTR3
    / -> SSTR2         // Αν αναγνωριστεί "/", μετάβαση στην κατάσταση SSTR2
    " -> SSTR1         // Αν αναγνωριστεί διπλό εισαγωγικό, μετάβαση στην κατάσταση SSTR1

GSTR:
    EOF -> GOOD         // Κατάσταση επιτυχίας

SWH0:
    EOF -> GOOD        // Αν φτάσουμε στο τέλος του αρχείου, μετάβαση στην κατάσταση GOOD
    *   -> SZ          // Σε οποιοδήποτε άλλο χαρακτήρα, μετάβαση στην κατάσταση SZ

SINT0:
    0-7 -> SINT2       // Αν ο χαρακτήρας είναι από "0" έως "7", μετάβαση στην κατάσταση SINT2
   X x  -> SINT3       // Αν ο χαρακτήρας είναι "X" ή "x", μετάβαση στην κατάσταση SINT3
    \n  -> GINT        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GINT
    .   -> SFL2        // Αν ο χαρακτήρας είναι ".", μετάβαση στην κατάσταση SFL2
    E e -> SFL4        // Αν ο χαρακτήρας είναι "E" ή "e", μετάβαση στην κατάσταση SFL4

SINT1:
    0-9 -> SINT1       // Αν ο χαρακτήρας είναι από "0" έως "9", μετάβαση στην κατάσταση SINT1
    .   -> SFL2        // Αν ο χαρακτήρας είναι ".", μετάβαση στην κατάσταση SFL2
    E e -> SFL4        // Αν ο χαρακτήρας είναι "E" ή "e", μετάβαση στην κατάσταση SFL4 
    \n  -> GINT        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GINT

SINT2:
    0-7 -> SINT2       // Αν ο χαρακτήρας είναι από "0" έως "7", μετάβαση στην κατάσταση SINT2
    \n  -> GINT        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GINT

SINT3:
    0-9 -> SINT3       // Αν ο χαρακτήρας είναι από "0" έως "9", μετάβαση στην κατάσταση SINT3
    A-F -> SINT3       // Αν ο χαρακτήρας είναι από "A" έως "F", μετάβαση στην κατάσταση SINT3
    \n  -> GINT        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GINT

GINT:
    EOF -> GOOD         // Κατάσταση επιτυχίας

SFL1:
   1-9 -> SINT1        // Αν ο χαρακτήρας είναι από "1" έως "9", μετάβαση στην κατάσταση SINT1

SFL2:
    0-9 -> SFL3         // Αν ο χαρακτήρας είναι από "0" έως "9", μετάβαση στην κατάσταση SFL3

SFL3:
    0-9 -> SFL3        // Αν ο χαρακτήρας είναι από "0" έως "9", παραμονή στην ίδια κατάσταση SFL3
    E e -> SFL4        // Αν ο χαρακτήρας είναι "E" ή "e", μετάβαση στην κατάσταση SFL4
    \n  -> GFL         // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GFL

SFL4:
    0  -> SFL5         // Αν ο χαρακτήρας είναι "0", μετάβαση στην κατάσταση SFL5
   1-9 -> SFL7         // Αν ο χαρακτήρας είναι από "1" έως "9", μετάβαση στην κατάσταση SFL7
   -   -> SFL6         // Αν ο χαρακτήρας είναι "-", μετάβαση στην κατάσταση SFL6

SFL5:
  \n   -> GFL         // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GFL

SFL6:
    1-9 ->SFL7         // Αν ο χαρακτήρας είναι από "1" έως "9", μετάβαση στην κατάσταση SFL7

SFL7:
      0-9 -> SFL7     // Αν ο χαρακτήρας είναι από "0" έως "9", παραμονή στην ίδια κατάσταση SFL7
     \n  -> GFL       // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GFL

GFL: 
    EOF -> GOOD        // Κατάσταση επιτυχίας

SC0:
     /   -> SC1        // Αν ο χαρακτήρας είναι "/", μετάβαση στην κατάσταση SC1
     \*  -> SC2        // Αν ο χαρακτήρας είναι "\*", μετάβαση στην κατάσταση SC2

SC1:
     *  -> SC1        // Αν ο χαρακτήρας είναι "*", παραμονή στην ίδια κατάσταση SC1
     \n -> GCOM       // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GCOM

SC2:
     * -> SC2         // Αν ο χαρακτήρας είναι "*", παραμονή στην ίδια κατάσταση SC2
    \* -> SC3         // Αν ο χαρακτήρας είναι "\*", μετάβαση στην κατάσταση SC3

SC3:
    * -> SC2          // Αν ο χαρακτήρας είναι "*", παραμονή στην ίδια κατάσταση SC2
    / -> SC4          // Αν ο χαρακτήρας είναι "/", μετάβαση στην κατάσταση SC4

SC4:
    \n -> GCOM        // Αν αναγνωριστεί αλλαγή γραμμής μετά από την ακολουθία "\*", μετάβαση στην κατάσταση GCOM

GCOM:
    EOF -> GOOD       // Κατάσταση επιτυχίας

GOOD(OK):             // Κατάσταση επιτυχίας





