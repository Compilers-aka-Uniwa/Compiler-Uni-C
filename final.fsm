START = SZ

SZ:
    A-Z -> SMCH         // Αν το χαρακτήρας είναι κεφαλαίο γράμμα, μετάβαση στην κατάσταση SID0
    _   -> SMCH         // Αν το χαρακτήρας είναι '_' (κάτω παύλα), μετάβαση στην κατάσταση SID0
    a-z -> SMSCH         // Αν το χαρακτήρας είναι πεζό γράμμα, μετάβαση στην κατάσταση SID0
    
    "   -> SOS        // Αν αναγνωριστεί το διπλό εισαγωγικό, μετάβαση στην κατάσταση SSTR0
    \n  -> SWH0       // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση SWH0
    \t  -> SWH0        // Αν αναγνωριστεί tab, μετάβαση στην κατάσταση SWH0
    \s  -> SWH0        // Αν αναγνωριστεί κενό, μετάβαση στην κατάσταση SWH0
    

    0   -> S0        // Αν ο χαρακτήρας είναι "0", μετάβαση στην κατάσταση SINT0
    1-9 -> SDEC        // Αν ο χαρακτήρας είναι ψηφίο από 1 έως 9, μετάβαση στην κατάσταση SINT1
    
    /   -> SOC         // Αν ο χαρακτήρας είναι "/", μετάβαση στην κατάσταση SC0

SMCH:
    \n ->  GID          // Αν ο χαρακτήρας είναι αλλαγή γραμμής, μετάβαση στην κατάσταση GID
    _ ->   SMCH         // Αν ο χαρακτήρας είναι '_' (κάτω παύλα), παραμονή στην ίδια κατάσταση SID0
    A-Z -> SMCH         // Αν ο χαρακτήρας είναι κεφαλαίο γράμμα, παραμονή στην ίδια κατάσταση SID0
    a-z -> SMCH         // Αν ο χαρακτήρας είναι πεζό γράμμα, παραμονή στην ίδια κατάσταση SID0
    0-9 -> SMCH         // Αν ο χαρακτήρας είναι ψηφίο, παραμονή στην ίδια κατάσταση SID0

GID:
    EOF -> GOOD         // Κατάσταση επιτυχίας

SOS:
   * -> SOS        // Αν αναγνωριστεί οποιοσδήποτε χαρακτήρας, παραμονή στην ίδια κατάσταση SSTR0
   " -> SCS          // Αν αναγνωριστεί διπλό εισαγωγικό, μετάβαση στην κατάσταση SSTR1
   / -> SSEQ0        // Αν αναγνωριστεί "/", μετάβαση στην κατάσταση SSTR2

SCS:
   \n -> GSTR          // Αν αναγνωριστεί αλλαγή γραμμής μετά το διπλό εισαγωγικό, μετάβαση στην κατάσταση GSTR

SSEQ0:
  \"n -> SSEQ1         // Αν αναγνωριστεί η ακολουθία \"n, μετάβαση στην κατάσταση SSTR3

SSEQ1:
    * -> SSEQ1         // Αν αναγνωριστεί οποιοσδήποτε χαρακτήρας, παραμονή στην ίδια κατάσταση SSTR3
    / -> SSEQ0         // Αν αναγνωριστεί "/", μετάβαση στην κατάσταση SSTR2
    " -> SCS         // Αν αναγνωριστεί διπλό εισαγωγικό, μετάβαση στην κατάσταση SSTR1

GSTR:
    EOF -> GOOD         // Κατάσταση επιτυχίας

SWH0:
    EOF -> GOOD        // Αν φτάσουμε στο τέλος του αρχείου, μετάβαση στην κατάσταση GOOD
    *   -> SZ          // Σε οποιοδήποτε άλλο χαρακτήρα, μετάβαση στην κατάσταση SZ
    \n  -> SWH0        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση SWH0
    \t  -> SWH0        // Αν αναγνωριστεί tab, μετάβαση στην κατάσταση SWH0
    \s  -> SWH0        // Αν αναγνωριστεί κενό, μετάβαση στην κατάσταση SWH0

S0:
    0-7 -> SOCT       // Αν ο χαρακτήρας είναι από "0" έως "7", μετάβαση στην κατάσταση SINT2
   X x  -> SHEX       // Αν ο χαρακτήρας είναι "X" ή "x", μετάβαση στην κατάσταση SINT3
    \n  -> GINT        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GINT
    .   -> SFL0        // Αν ο χαρακτήρας είναι ".", μετάβαση στην κατάσταση SFL2
    E e -> SPOW        // Αν ο χαρακτήρας είναι "E" ή "e", μετάβαση στην κατάσταση SFL4

SDEC:
    0-9 -> SDEC       // Αν ο χαρακτήρας είναι από "0" έως "9", μετάβαση στην κατάσταση SINT1
    .   -> SFL0        // Αν ο χαρακτήρας είναι ".", μετάβαση στην κατάσταση SFL2
    E e -> SPOW        // Αν ο χαρακτήρας είναι "E" ή "e", μετάβαση στην κατάσταση SFL4 
    \n  -> GINT        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GINT

SOCT:
    0-7 -> SOCT      // Αν ο χαρακτήρας είναι από "0" έως "7", μετάβαση στην κατάσταση SINT2
    \n  -> GINT        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GINT

SHEX:
    0-9 -> SHEX       // Αν ο χαρακτήρας είναι από "0" έως "9", μετάβαση στην κατάσταση SINT3
    A-F -> SHEX       // Αν ο χαρακτήρας είναι από "A" έως "F", μετάβαση στην κατάσταση SINT3
    \n  -> GINT        // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GINT

GINT:
    EOF -> GOOD         // Κατάσταση επιτυχίας



SFL0:
    0-9 -> SFL1         // Αν ο χαρακτήρας είναι από "0" έως "9", μετάβαση στην κατάσταση SFL3

SFL1:
    0-9 -> SFL1        // Αν ο χαρακτήρας είναι από "0" έως "9", παραμονή στην ίδια κατάσταση SFL3
    E e -> SPOW        // Αν ο χαρακτήρας είναι "E" ή "e", μετάβαση στην κατάσταση SFL4
    \n  -> GFL         // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GFL

SPOW:
    0  -> SE0        // Αν ο χαρακτήρας είναι "0", μετάβαση στην κατάσταση SFL5
   1-9 -> SE        // Αν ο χαρακτήρας είναι από "1" έως "9", μετάβαση στην κατάσταση SFL7
   -   -> SNE      

SNE:
    1-9 -> SE
   

SE0:
  \n   -> GFL         // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GFL



SE:
      0-9 -> SE     // Αν ο χαρακτήρας είναι από "0" έως "9", παραμονή στην ίδια κατάσταση SFL7
     \n  -> GFL       // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GFL

GFL: 
    EOF -> GOOD        // Κατάσταση επιτυχίας

SOC:
     /   -> SSC0        // Αν ο χαρακτήρας είναι "/", μετάβαση στην κατάσταση SC1
     \*  -> SMC0       // Αν ο χαρακτήρας είναι "\*", μετάβαση στην κατάσταση SC2

SSC0:
     *  -> SSC0        // Αν ο χαρακτήρας είναι "*", παραμονή στην ίδια κατάσταση SC1
     \n -> GCOM       // Αν αναγνωριστεί αλλαγή γραμμής, μετάβαση στην κατάσταση GCOM

SMC0:
     * -> SMC0         // Αν ο χαρακτήρας είναι "*", παραμονή στην ίδια κατάσταση SC2
    \* -> SMC1         // Αν ο χαρακτήρας είναι "\*", μετάβαση στην κατάσταση SC3

SMC1:
    * -> SC2          // Αν ο χαρακτήρας είναι "*", παραμονή στην ίδια κατάσταση SC2
    / -> SC4          // Αν ο χαρακτήρας είναι "/", μετάβαση στην κατάσταση SC4

SCMC:
    \n -> GCOM        // Αν αναγνωριστεί αλλαγή γραμμής μετά από την ακολουθία "\*", μετάβαση στην κατάσταση GCOM

GCOM:
    EOF -> GOOD       // Κατάσταση επιτυχίας

GOOD(OK):             // Κατάσταση επιτυχίας





