/************ Test case [#2.1] : CODE-STRUCTURE ************/


/************ Test case [#2.2] : VARIABLES-STATEMENT ************/
int a;
double var;
float c;
int a, b, c;
long var1,var2,var3,var4;
short sh1;

/************ Test case [#2.3] : ARRAYS ************/
pin1 = [1, 2, 3, 4, 5 ];
pin2 = ["a", "b", "c", "d"];

/************ Test case [#2.4] : BUILD-IN-FUNCTIONS ************/
// ========== Test case [#2.4.1] : SCAN ==========
scan(x);
scan(MyVariable);
// ========== Test case [#2.4.2] : LEN ==========
len([10, 20, 30, 40, 50]);
len("Î¤his is a string");
len(StringVariable);
// ========== Test case [#2.4.3] : CMP ==========
cmp("test", "best");
cmp(str1, str2);
// ========== Test case [#2.4.4] : PRINT ==========
print("Hello World");
print(x, "=", 100);
print(cmp(str1, str2));
print(len("This is a string"));
print(pin[0]);

/************ Test case [#2.5] : USER-FUNCTIONS ************/
func myfunc()
{
}
func myfunc2(int paramA, long paramB, short paramC)
{
}

/************ Test case [#2.6] : EXPRESSIONS-STATEMENT ************/
// ========== Test case [#2.6.1] : ARITHMETIC-EXPRESSIONS ==========
a1 * a2
a3 + a4
-5 + 10
15 + a5 - 9
+5 - a1 -16
+10 -5 + myvar - myvar2
// ========== Test case [#2.6.2] : VARIABLES-INITIALIZE ==========
x1=0;
x1, x2 = 0, 1;
x1, list1 = 0, ["A", "B", "C"];
x1, list1, string = 0, ["A", "B", "C"], "HELLO";
// ========== Test case [#2.6.3] : ARRAY-MERGE ==========
[1, 2, 3] + [4, 5, 6]
[1, 3] + [5, 7, 9, 11]
// ========== Test case [#2.6.4] : COMPARISONS ==========
x1 > x2
a <= b
myvar == 52
