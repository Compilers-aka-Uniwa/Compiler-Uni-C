Terminals unused in grammar

    BREAK
    DO
    IF
    SIZEOF
    CASE
    STRUCT
    FUNC
    ELSE
    SWITCH
    CONST
    RETURN
    VOID
    CONTINUE
    FOR
    WHILE
    "*="
    "--"
    "/="
    "<"
    "!"
    ">"
    "&&"
    "<="
    "%"
    "||"
    ">="
    "=="
    "&"
    "+="
    "!="
    "-="
    "++"
    "{"
    "}"
    "\\"
    END_OF_FILE
    UNKNOWN


State 17 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program decl_var NEWLINE
    2        | program decl_arr NEWLINE
    3        | program decl_arr
    4        | program build_func NEWLINE
    5        | program NEWLINE
    6        | program decl_operations NEWLINE
    7        | ε

    8 decl_arr: IDENTIFIER "=" elements ";"

    9 pos_elem: IDENTIFIER "[" INTEGER "]"

   10 elements: "[" "]"
   11         | "[" arr_int "]"
   12         | "[" arr_fl "]"
   13         | "[" arr_str "]"

   14 arr_int: INTEGER
   15        | arr_int "," arr_int

   16 arr_fl: FLOAT
   17       | arr_fl "," arr_fl

   18 arr_str: STRING
   19        | arr_str "," arr_str

   20 build_func: func ";"

   21 func: SCAN "(" scan_params ")"
   22     | LEN "(" len_params ")"
   23     | CMP "(" cmp_params ")"
   24     | PRINT "(" print_params ")"

   25 scan_params: IDENTIFIER

   26 len_params: elements
   27           | STRING
   28           | IDENTIFIER

   29 cmp_params: STRING
   30           | IDENTIFIER
   31           | cmp_params "," cmp_params

   32 print_params: STRING
   33             | IDENTIFIER
   34             | INTEGER
   35             | func
   36             | pos_elem
   37             | print_params "," print_params

   38 decl_var: type var ";"

   39 type: INT
   40     | FLOAT_KEY
   41     | DOUBLE
   42     | SHORT
   43     | LONG

   44 var: IDENTIFIER
   45    | var "," var

   46 decl_operations: arithm_expr

   47 sign: INTEGER
   48     | "+" sign
   49     | "-" sign

   50 arithm_expr: sign
   51            | IDENTIFIER
   52            | arithm_expr "+" arithm_expr
   53            | arithm_expr "-" arithm_expr
   54            | arithm_expr "*" arithm_expr
   55            | arithm_expr "/" arithm_expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SCAN (258) 21
    LEN (259) 22
    CMP (260) 23
    PRINT (261) 24
    IDENTIFIER (262) 8 9 25 28 30 33 44 51
    STRING (263) 18 27 29 32
    INTEGER (264) 9 14 34 47
    FLOAT (265) 16
    BREAK (266)
    DO (267)
    IF (268)
    SIZEOF (269)
    CASE (270)
    DOUBLE (271) 41
    INT (272) 39
    STRUCT (273)
    FUNC (274)
    ELSE (275)
    LONG (276) 43
    SWITCH (277)
    CONST (278)
    FLOAT_KEY (279) 40
    RETURN (280)
    VOID (281)
    CONTINUE (282)
    FOR (283)
    SHORT (284) 42
    WHILE (285)
    "+" (286) 48 52
    "*=" (287)
    "--" (288)
    "-" (289) 49 53
    "/=" (290)
    "<" (291)
    "*" (292) 54
    "!" (293)
    ">" (294)
    "/" (295) 55
    "&&" (296)
    "<=" (297)
    "%" (298)
    "||" (299)
    ">=" (300)
    "=" (301) 8
    "==" (302)
    "&" (303)
    "+=" (304)
    "!=" (305)
    "-=" (306)
    "++" (307)
    "(" (308) 21 22 23 24
    ")" (309) 21 22 23 24
    "[" (310) 9 10 11 12 13
    "]" (311) 9 10 11 12 13
    "{" (312)
    "}" (313)
    "," (314) 15 17 19 31 37 45
    "\\" (315)
    ";" (316) 8 20 38
    NEWLINE (317) 1 2 4 5 6
    END_OF_FILE (318)
    UNKNOWN (319)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    program (66)
        on left: 1 2 3 4 5 6 7
        on right: 0 1 2 3 4 5 6
    decl_arr (67)
        on left: 8
        on right: 2 3
    pos_elem (68)
        on left: 9
        on right: 36
    elements (69)
        on left: 10 11 12 13
        on right: 8 26
    arr_int (70)
        on left: 14 15
        on right: 11 15
    arr_fl (71)
        on left: 16 17
        on right: 12 17
    arr_str (72)
        on left: 18 19
        on right: 13 19
    build_func (73)
        on left: 20
        on right: 4
    func (74)
        on left: 21 22 23 24
        on right: 20 35
    scan_params (75)
        on left: 25
        on right: 21
    len_params (76)
        on left: 26 27 28
        on right: 22
    cmp_params (77)
        on left: 29 30 31
        on right: 23 31
    print_params (78)
        on left: 32 33 34 35 36 37
        on right: 24 37
    decl_var (79)
        on left: 38
        on right: 1
    type (80)
        on left: 39 40 41 42 43
        on right: 38
    var (81)
        on left: 44 45
        on right: 38 45
    decl_operations (82)
        on left: 46
        on right: 6
    sign (83)
        on left: 47 48 49
        on right: 48 49 50
    arithm_expr (84)
        on left: 50 51 52 53 54 55
        on right: 46 52 53 54 55


State 0

    0 $accept: • program $end

    $default  reduce using rule 7 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    1 program: program • decl_var NEWLINE
    2        | program • decl_arr NEWLINE
    3        | program • decl_arr
    4        | program • build_func NEWLINE
    5        | program • NEWLINE
    6        | program • decl_operations NEWLINE

    $end        shift, and go to state 2
    SCAN        shift, and go to state 3
    LEN         shift, and go to state 4
    CMP         shift, and go to state 5
    PRINT       shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    INTEGER     shift, and go to state 8
    DOUBLE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    FLOAT_KEY   shift, and go to state 12
    SHORT       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    NEWLINE     shift, and go to state 16

    decl_arr         go to state 17
    build_func       go to state 18
    func             go to state 19
    decl_var         go to state 20
    type             go to state 21
    decl_operations  go to state 22
    sign             go to state 23
    arithm_expr      go to state 24


State 2

    0 $accept: program $end •

    $default  accept


State 3

   21 func: SCAN • "(" scan_params ")"

    "("  shift, and go to state 25


State 4

   22 func: LEN • "(" len_params ")"

    "("  shift, and go to state 26


State 5

   23 func: CMP • "(" cmp_params ")"

    "("  shift, and go to state 27


State 6

   24 func: PRINT • "(" print_params ")"

    "("  shift, and go to state 28


State 7

    8 decl_arr: IDENTIFIER • "=" elements ";"
   51 arithm_expr: IDENTIFIER •

    "="  shift, and go to state 29

    $default  reduce using rule 51 (arithm_expr)


State 8

   47 sign: INTEGER •

    $default  reduce using rule 47 (sign)


State 9

   41 type: DOUBLE •

    $default  reduce using rule 41 (type)


State 10

   39 type: INT •

    $default  reduce using rule 39 (type)


State 11

   43 type: LONG •

    $default  reduce using rule 43 (type)


State 12

   40 type: FLOAT_KEY •

    $default  reduce using rule 40 (type)


State 13

   42 type: SHORT •

    $default  reduce using rule 42 (type)


State 14

   48 sign: "+" • sign

    INTEGER  shift, and go to state 8
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15

    sign  go to state 30


State 15

   49 sign: "-" • sign

    INTEGER  shift, and go to state 8
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15

    sign  go to state 31


State 16

    5 program: program NEWLINE •

    $default  reduce using rule 5 (program)


State 17

    2 program: program decl_arr • NEWLINE
    3        | program decl_arr •

    NEWLINE  shift, and go to state 32

    NEWLINE   [reduce using rule 3 (program)]
    $default  reduce using rule 3 (program)


State 18

    4 program: program build_func • NEWLINE

    NEWLINE  shift, and go to state 33


State 19

   20 build_func: func • ";"

    ";"  shift, and go to state 34


State 20

    1 program: program decl_var • NEWLINE

    NEWLINE  shift, and go to state 35


State 21

   38 decl_var: type • var ";"

    IDENTIFIER  shift, and go to state 36

    var  go to state 37


State 22

    6 program: program decl_operations • NEWLINE

    NEWLINE  shift, and go to state 38


State 23

   50 arithm_expr: sign •

    $default  reduce using rule 50 (arithm_expr)


State 24

   46 decl_operations: arithm_expr •
   52 arithm_expr: arithm_expr • "+" arithm_expr
   53            | arithm_expr • "-" arithm_expr
   54            | arithm_expr • "*" arithm_expr
   55            | arithm_expr • "/" arithm_expr

    "+"  shift, and go to state 39
    "-"  shift, and go to state 40
    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 46 (decl_operations)


State 25

   21 func: SCAN "(" • scan_params ")"

    IDENTIFIER  shift, and go to state 43

    scan_params  go to state 44


State 26

   22 func: LEN "(" • len_params ")"

    IDENTIFIER  shift, and go to state 45
    STRING      shift, and go to state 46
    "["         shift, and go to state 47

    elements    go to state 48
    len_params  go to state 49


State 27

   23 func: CMP "(" • cmp_params ")"

    IDENTIFIER  shift, and go to state 50
    STRING      shift, and go to state 51

    cmp_params  go to state 52


State 28

   24 func: PRINT "(" • print_params ")"

    SCAN        shift, and go to state 3
    LEN         shift, and go to state 4
    CMP         shift, and go to state 5
    PRINT       shift, and go to state 6
    IDENTIFIER  shift, and go to state 53
    STRING      shift, and go to state 54
    INTEGER     shift, and go to state 55

    pos_elem      go to state 56
    func          go to state 57
    print_params  go to state 58


State 29

    8 decl_arr: IDENTIFIER "=" • elements ";"

    "["  shift, and go to state 47

    elements  go to state 59


State 30

   48 sign: "+" sign •

    $default  reduce using rule 48 (sign)


State 31

   49 sign: "-" sign •

    $default  reduce using rule 49 (sign)


State 32

    2 program: program decl_arr NEWLINE •

    $default  reduce using rule 2 (program)


State 33

    4 program: program build_func NEWLINE •

    $default  reduce using rule 4 (program)


State 34

   20 build_func: func ";" •

    $default  reduce using rule 20 (build_func)


State 35

    1 program: program decl_var NEWLINE •

    $default  reduce using rule 1 (program)


State 36

   44 var: IDENTIFIER •

    $default  reduce using rule 44 (var)


State 37

   38 decl_var: type var • ";"
   45 var: var • "," var

    ","  shift, and go to state 60
    ";"  shift, and go to state 61


State 38

    6 program: program decl_operations NEWLINE •

    $default  reduce using rule 6 (program)


State 39

   52 arithm_expr: arithm_expr "+" • arithm_expr

    IDENTIFIER  shift, and go to state 62
    INTEGER     shift, and go to state 8
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15

    sign         go to state 23
    arithm_expr  go to state 63


State 40

   53 arithm_expr: arithm_expr "-" • arithm_expr

    IDENTIFIER  shift, and go to state 62
    INTEGER     shift, and go to state 8
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15

    sign         go to state 23
    arithm_expr  go to state 64


State 41

   54 arithm_expr: arithm_expr "*" • arithm_expr

    IDENTIFIER  shift, and go to state 62
    INTEGER     shift, and go to state 8
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15

    sign         go to state 23
    arithm_expr  go to state 65


State 42

   55 arithm_expr: arithm_expr "/" • arithm_expr

    IDENTIFIER  shift, and go to state 62
    INTEGER     shift, and go to state 8
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15

    sign         go to state 23
    arithm_expr  go to state 66


State 43

   25 scan_params: IDENTIFIER •

    $default  reduce using rule 25 (scan_params)


State 44

   21 func: SCAN "(" scan_params • ")"

    ")"  shift, and go to state 67


State 45

   28 len_params: IDENTIFIER •

    $default  reduce using rule 28 (len_params)


State 46

   27 len_params: STRING •

    $default  reduce using rule 27 (len_params)


State 47

   10 elements: "[" • "]"
   11         | "[" • arr_int "]"
   12         | "[" • arr_fl "]"
   13         | "[" • arr_str "]"

    STRING   shift, and go to state 68
    INTEGER  shift, and go to state 69
    FLOAT    shift, and go to state 70
    "]"      shift, and go to state 71

    arr_int  go to state 72
    arr_fl   go to state 73
    arr_str  go to state 74


State 48

   26 len_params: elements •

    $default  reduce using rule 26 (len_params)


State 49

   22 func: LEN "(" len_params • ")"

    ")"  shift, and go to state 75


State 50

   30 cmp_params: IDENTIFIER •

    $default  reduce using rule 30 (cmp_params)


State 51

   29 cmp_params: STRING •

    $default  reduce using rule 29 (cmp_params)


State 52

   23 func: CMP "(" cmp_params • ")"
   31 cmp_params: cmp_params • "," cmp_params

    ")"  shift, and go to state 76
    ","  shift, and go to state 77


State 53

    9 pos_elem: IDENTIFIER • "[" INTEGER "]"
   33 print_params: IDENTIFIER •

    "["  shift, and go to state 78

    $default  reduce using rule 33 (print_params)


State 54

   32 print_params: STRING •

    $default  reduce using rule 32 (print_params)


State 55

   34 print_params: INTEGER •

    $default  reduce using rule 34 (print_params)


State 56

   36 print_params: pos_elem •

    $default  reduce using rule 36 (print_params)


State 57

   35 print_params: func •

    $default  reduce using rule 35 (print_params)


State 58

   24 func: PRINT "(" print_params • ")"
   37 print_params: print_params • "," print_params

    ")"  shift, and go to state 79
    ","  shift, and go to state 80


State 59

    8 decl_arr: IDENTIFIER "=" elements • ";"

    ";"  shift, and go to state 81


State 60

   45 var: var "," • var

    IDENTIFIER  shift, and go to state 36

    var  go to state 82


State 61

   38 decl_var: type var ";" •

    $default  reduce using rule 38 (decl_var)


State 62

   51 arithm_expr: IDENTIFIER •

    $default  reduce using rule 51 (arithm_expr)


State 63

   52 arithm_expr: arithm_expr • "+" arithm_expr
   52            | arithm_expr "+" arithm_expr •
   53            | arithm_expr • "-" arithm_expr
   54            | arithm_expr • "*" arithm_expr
   55            | arithm_expr • "/" arithm_expr

    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 52 (arithm_expr)


State 64

   52 arithm_expr: arithm_expr • "+" arithm_expr
   53            | arithm_expr • "-" arithm_expr
   53            | arithm_expr "-" arithm_expr •
   54            | arithm_expr • "*" arithm_expr
   55            | arithm_expr • "/" arithm_expr

    "*"  shift, and go to state 41
    "/"  shift, and go to state 42

    $default  reduce using rule 53 (arithm_expr)


State 65

   52 arithm_expr: arithm_expr • "+" arithm_expr
   53            | arithm_expr • "-" arithm_expr
   54            | arithm_expr • "*" arithm_expr
   54            | arithm_expr "*" arithm_expr •
   55            | arithm_expr • "/" arithm_expr

    $default  reduce using rule 54 (arithm_expr)


State 66

   52 arithm_expr: arithm_expr • "+" arithm_expr
   53            | arithm_expr • "-" arithm_expr
   54            | arithm_expr • "*" arithm_expr
   55            | arithm_expr • "/" arithm_expr
   55            | arithm_expr "/" arithm_expr •

    $default  reduce using rule 55 (arithm_expr)


State 67

   21 func: SCAN "(" scan_params ")" •

    $default  reduce using rule 21 (func)


State 68

   18 arr_str: STRING •

    $default  reduce using rule 18 (arr_str)


State 69

   14 arr_int: INTEGER •

    $default  reduce using rule 14 (arr_int)


State 70

   16 arr_fl: FLOAT •

    $default  reduce using rule 16 (arr_fl)


State 71

   10 elements: "[" "]" •

    $default  reduce using rule 10 (elements)


State 72

   11 elements: "[" arr_int • "]"
   15 arr_int: arr_int • "," arr_int

    "]"  shift, and go to state 83
    ","  shift, and go to state 84


State 73

   12 elements: "[" arr_fl • "]"
   17 arr_fl: arr_fl • "," arr_fl

    "]"  shift, and go to state 85
    ","  shift, and go to state 86


State 74

   13 elements: "[" arr_str • "]"
   19 arr_str: arr_str • "," arr_str

    "]"  shift, and go to state 87
    ","  shift, and go to state 88


State 75

   22 func: LEN "(" len_params ")" •

    $default  reduce using rule 22 (func)


State 76

   23 func: CMP "(" cmp_params ")" •

    $default  reduce using rule 23 (func)


State 77

   31 cmp_params: cmp_params "," • cmp_params

    IDENTIFIER  shift, and go to state 50
    STRING      shift, and go to state 51

    cmp_params  go to state 89


State 78

    9 pos_elem: IDENTIFIER "[" • INTEGER "]"

    INTEGER  shift, and go to state 90


State 79

   24 func: PRINT "(" print_params ")" •

    $default  reduce using rule 24 (func)


State 80

   37 print_params: print_params "," • print_params

    SCAN        shift, and go to state 3
    LEN         shift, and go to state 4
    CMP         shift, and go to state 5
    PRINT       shift, and go to state 6
    IDENTIFIER  shift, and go to state 53
    STRING      shift, and go to state 54
    INTEGER     shift, and go to state 55

    pos_elem      go to state 56
    func          go to state 57
    print_params  go to state 91


State 81

    8 decl_arr: IDENTIFIER "=" elements ";" •

    $default  reduce using rule 8 (decl_arr)


State 82

   45 var: var • "," var
   45    | var "," var •

    $default  reduce using rule 45 (var)


State 83

   11 elements: "[" arr_int "]" •

    $default  reduce using rule 11 (elements)


State 84

   15 arr_int: arr_int "," • arr_int

    INTEGER  shift, and go to state 69

    arr_int  go to state 92


State 85

   12 elements: "[" arr_fl "]" •

    $default  reduce using rule 12 (elements)


State 86

   17 arr_fl: arr_fl "," • arr_fl

    FLOAT  shift, and go to state 70

    arr_fl  go to state 93


State 87

   13 elements: "[" arr_str "]" •

    $default  reduce using rule 13 (elements)


State 88

   19 arr_str: arr_str "," • arr_str

    STRING  shift, and go to state 68

    arr_str  go to state 94


State 89

   31 cmp_params: cmp_params • "," cmp_params
   31           | cmp_params "," cmp_params •

    $default  reduce using rule 31 (cmp_params)


State 90

    9 pos_elem: IDENTIFIER "[" INTEGER • "]"

    "]"  shift, and go to state 95


State 91

   37 print_params: print_params • "," print_params
   37             | print_params "," print_params •

    $default  reduce using rule 37 (print_params)


State 92

   15 arr_int: arr_int • "," arr_int
   15        | arr_int "," arr_int •

    $default  reduce using rule 15 (arr_int)


State 93

   17 arr_fl: arr_fl • "," arr_fl
   17       | arr_fl "," arr_fl •

    $default  reduce using rule 17 (arr_fl)


State 94

   19 arr_str: arr_str • "," arr_str
   19        | arr_str "," arr_str •

    $default  reduce using rule 19 (arr_str)


State 95

    9 pos_elem: IDENTIFIER "[" INTEGER "]" •

    $default  reduce using rule 9 (pos_elem)
