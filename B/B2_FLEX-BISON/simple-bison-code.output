Terminals unused in grammar

    SBREAK
    SDO
    SIF
    SSIZEOF
    SCASE
    SSTRUCT
    SELSE
    SSWITCH
    SCONST
    SRETURN
    SVOID
    SCONTINUE
    SFOR
    SWHILE
    "*="
    "--"
    "/="
    "!"
    "&&"
    "%"
    "||"
    "&"
    "+="
    "-="
    "++"
    "\\"
    UNKNOWN


State 3 conflicts: 1 reduce/reduce
State 4 conflicts: 1 reduce/reduce
State 5 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: program decl_var NEWLINE
    2        | program decl_arr NEWLINE
    3        | program build_func NEWLINE
    4        | program decl_func NEWLINE
    5        | program decl_ops NEWLINE
    6        | program NEWLINE
    7        | ε

    8 decl_var: type var ";"

    9 type: SINT
   10     | SFLOAT
   11     | SDOUBLE
   12     | SSHORT
   13     | SLONG

   14 var: IDENTIFIER
   15    | var "," var

   16 decl_arr: IDENTIFIER "=" arr_elements ";"

   17 pos_elem: IDENTIFIER "[" INTEGER "]"

   18 arr_elements: "[" "]"
   19             | "[" integ "]"
   20             | "[" fl "]"
   21             | "[" str "]"

   22 integ: INTEGER
   23      | integ "," integ

   24 fl: FLOAT
   25   | fl "," fl

   26 str: STRING
   27    | str "," str

   28 build_func: func ";"

   29 func: SSCAN "(" scan_params ")"
   30     | SLEN "(" len_params ")"
   31     | SCMP "(" cmp_params ")"
   32     | SPRINT "(" print_params ")"

   33 scan_params: IDENTIFIER

   34 len_params: arr_elements
   35           | STRING
   36           | IDENTIFIER

   37 cmp_params: STRING
   38           | IDENTIFIER
   39           | cmp_params "," cmp_params

   40 print_params: STRING
   41             | IDENTIFIER
   42             | INTEGER
   43             | FLOAT
   44             | func
   45             | pos_elem
   46             | print_params "," print_params

   47 decl_func: name_func code_func

   48 name_func: IDENTIFIER
   49          | SFUNC name_func params NEWLINE

   50 params: "(" ")"
   51       | "(" type_params ")"

   52 type_params: type IDENTIFIER
   53            | type_params "," type_params

   54 code_func: "{" code NEWLINE "}"

   55 code: ε

   56 decl_ops: arithm_expr
   57         | cmp_expr
   58         | merge_arr

   59 sign: INTEGER
   60     | FLOAT
   61     | "+" sign
   62     | "-" sign

   63 arithm_expr: sign
   64            | IDENTIFIER
   65            | arithm_expr "+" arithm_expr
   66            | arithm_expr "-" arithm_expr
   67            | arithm_expr "*" arithm_expr
   68            | arithm_expr "/" arithm_expr

   69 cmp_expr: INTEGER
   70         | FLOAT
   71         | IDENTIFIER
   72         | cmp_expr ">" cmp_expr
   73         | cmp_expr "<" cmp_expr
   74         | cmp_expr "<=" cmp_expr
   75         | cmp_expr ">=" cmp_expr
   76         | cmp_expr "==" cmp_expr
   77         | cmp_expr "!=" cmp_expr

   78 merge_arr: arr_elements "+" arr_elements


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 14 16 17 33 36 38 41 48 52 64 71
    STRING (259) 26 35 37 40
    INTEGER (260) 17 22 42 59 69
    FLOAT (261) 24 43 60 70
    SBREAK (262)
    SDO (263)
    SIF (264)
    SSIZEOF (265)
    SCASE (266)
    SDOUBLE (267) 11
    SINT (268) 9
    SSTRUCT (269)
    SFUNC (270) 49
    SELSE (271)
    SLONG (272) 13
    SSWITCH (273)
    SCONST (274)
    SFLOAT (275) 10
    SRETURN (276)
    SVOID (277)
    SCONTINUE (278)
    SFOR (279)
    SSHORT (280) 12
    SWHILE (281)
    "+" (282) 61 65 78
    "*=" (283)
    "--" (284)
    "-" (285) 62 66
    "/=" (286)
    "<" (287) 73
    "*" (288) 67
    "!" (289)
    ">" (290) 72
    "/" (291) 68
    "&&" (292)
    "<=" (293) 74
    "%" (294)
    "||" (295)
    ">=" (296) 75
    "=" (297) 16
    "==" (298) 76
    "&" (299)
    "+=" (300)
    "!=" (301) 77
    "-=" (302)
    "++" (303)
    "(" (304) 29 30 31 32 50 51
    ")" (305) 29 30 31 32 50 51
    "[" (306) 17 18 19 20 21
    "]" (307) 17 18 19 20 21
    "{" (308) 54
    "}" (309) 54
    "," (310) 15 23 25 27 39 46 53
    "\\" (311)
    ";" (312) 8 16 28
    SSCAN (313) 29
    SPRINT (314) 32
    SLEN (315) 30
    SCMP (316) 31
    NEWLINE (317) 1 2 3 4 5 6 49 54
    UNKNOWN (318)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    program (65)
        on left: 1 2 3 4 5 6 7
        on right: 0 1 2 3 4 5 6
    decl_var (66)
        on left: 8
        on right: 1
    type (67)
        on left: 9 10 11 12 13
        on right: 8 52
    var (68)
        on left: 14 15
        on right: 8 15
    decl_arr (69)
        on left: 16
        on right: 2
    pos_elem (70)
        on left: 17
        on right: 45
    arr_elements (71)
        on left: 18 19 20 21
        on right: 16 34 78
    integ (72)
        on left: 22 23
        on right: 19 23
    fl (73)
        on left: 24 25
        on right: 20 25
    str (74)
        on left: 26 27
        on right: 21 27
    build_func (75)
        on left: 28
        on right: 3
    func (76)
        on left: 29 30 31 32
        on right: 28 44
    scan_params (77)
        on left: 33
        on right: 29
    len_params (78)
        on left: 34 35 36
        on right: 30
    cmp_params (79)
        on left: 37 38 39
        on right: 31 39
    print_params (80)
        on left: 40 41 42 43 44 45 46
        on right: 32 46
    decl_func (81)
        on left: 47
        on right: 4
    name_func (82)
        on left: 48 49
        on right: 47 49
    params (83)
        on left: 50 51
        on right: 49
    type_params (84)
        on left: 52 53
        on right: 51 53
    code_func (85)
        on left: 54
        on right: 47
    code (86)
        on left: 55
        on right: 54
    decl_ops (87)
        on left: 56 57 58
        on right: 5
    sign (88)
        on left: 59 60 61 62
        on right: 61 62 63
    arithm_expr (89)
        on left: 63 64 65 66 67 68
        on right: 56 65 66 67 68
    cmp_expr (90)
        on left: 69 70 71 72 73 74 75 76 77
        on right: 57 72 73 74 75 76 77
    merge_arr (91)
        on left: 78
        on right: 58


State 0

    0 $accept: • program $end

    $default  reduce using rule 7 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    1 program: program • decl_var NEWLINE
    2        | program • decl_arr NEWLINE
    3        | program • build_func NEWLINE
    4        | program • decl_func NEWLINE
    5        | program • decl_ops NEWLINE
    6        | program • NEWLINE

    $end        shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    INTEGER     shift, and go to state 4
    FLOAT       shift, and go to state 5
    SDOUBLE     shift, and go to state 6
    SINT        shift, and go to state 7
    SFUNC       shift, and go to state 8
    SLONG       shift, and go to state 9
    SFLOAT      shift, and go to state 10
    SSHORT      shift, and go to state 11
    "+"         shift, and go to state 12
    "-"         shift, and go to state 13
    "["         shift, and go to state 14
    SSCAN       shift, and go to state 15
    SPRINT      shift, and go to state 16
    SLEN        shift, and go to state 17
    SCMP        shift, and go to state 18
    NEWLINE     shift, and go to state 19

    decl_var      go to state 20
    type          go to state 21
    decl_arr      go to state 22
    arr_elements  go to state 23
    build_func    go to state 24
    func          go to state 25
    decl_func     go to state 26
    name_func     go to state 27
    decl_ops      go to state 28
    sign          go to state 29
    arithm_expr   go to state 30
    cmp_expr      go to state 31
    merge_arr     go to state 32


State 2

    0 $accept: program $end •

    $default  accept


State 3

   16 decl_arr: IDENTIFIER • "=" arr_elements ";"
   48 name_func: IDENTIFIER •
   64 arithm_expr: IDENTIFIER •
   71 cmp_expr: IDENTIFIER •

    "="  shift, and go to state 33

    "+"       reduce using rule 64 (arithm_expr)
    "-"       reduce using rule 64 (arithm_expr)
    "*"       reduce using rule 64 (arithm_expr)
    "/"       reduce using rule 64 (arithm_expr)
    "{"       reduce using rule 48 (name_func)
    NEWLINE   reduce using rule 64 (arithm_expr)
    NEWLINE   [reduce using rule 71 (cmp_expr)]
    $default  reduce using rule 71 (cmp_expr)


State 4

   59 sign: INTEGER •
   69 cmp_expr: INTEGER •

    "+"       reduce using rule 59 (sign)
    "-"       reduce using rule 59 (sign)
    "*"       reduce using rule 59 (sign)
    "/"       reduce using rule 59 (sign)
    NEWLINE   reduce using rule 59 (sign)
    NEWLINE   [reduce using rule 69 (cmp_expr)]
    $default  reduce using rule 69 (cmp_expr)


State 5

   60 sign: FLOAT •
   70 cmp_expr: FLOAT •

    "+"       reduce using rule 60 (sign)
    "-"       reduce using rule 60 (sign)
    "*"       reduce using rule 60 (sign)
    "/"       reduce using rule 60 (sign)
    NEWLINE   reduce using rule 60 (sign)
    NEWLINE   [reduce using rule 70 (cmp_expr)]
    $default  reduce using rule 70 (cmp_expr)


State 6

   11 type: SDOUBLE •

    $default  reduce using rule 11 (type)


State 7

    9 type: SINT •

    $default  reduce using rule 9 (type)


State 8

   49 name_func: SFUNC • name_func params NEWLINE

    IDENTIFIER  shift, and go to state 34
    SFUNC       shift, and go to state 8

    name_func  go to state 35


State 9

   13 type: SLONG •

    $default  reduce using rule 13 (type)


State 10

   10 type: SFLOAT •

    $default  reduce using rule 10 (type)


State 11

   12 type: SSHORT •

    $default  reduce using rule 12 (type)


State 12

   61 sign: "+" • sign

    INTEGER  shift, and go to state 36
    FLOAT    shift, and go to state 37
    "+"      shift, and go to state 12
    "-"      shift, and go to state 13

    sign  go to state 38


State 13

   62 sign: "-" • sign

    INTEGER  shift, and go to state 36
    FLOAT    shift, and go to state 37
    "+"      shift, and go to state 12
    "-"      shift, and go to state 13

    sign  go to state 39


State 14

   18 arr_elements: "[" • "]"
   19             | "[" • integ "]"
   20             | "[" • fl "]"
   21             | "[" • str "]"

    STRING   shift, and go to state 40
    INTEGER  shift, and go to state 41
    FLOAT    shift, and go to state 42
    "]"      shift, and go to state 43

    integ  go to state 44
    fl     go to state 45
    str    go to state 46


State 15

   29 func: SSCAN • "(" scan_params ")"

    "("  shift, and go to state 47


State 16

   32 func: SPRINT • "(" print_params ")"

    "("  shift, and go to state 48


State 17

   30 func: SLEN • "(" len_params ")"

    "("  shift, and go to state 49


State 18

   31 func: SCMP • "(" cmp_params ")"

    "("  shift, and go to state 50


State 19

    6 program: program NEWLINE •

    $default  reduce using rule 6 (program)


State 20

    1 program: program decl_var • NEWLINE

    NEWLINE  shift, and go to state 51


State 21

    8 decl_var: type • var ";"

    IDENTIFIER  shift, and go to state 52

    var  go to state 53


State 22

    2 program: program decl_arr • NEWLINE

    NEWLINE  shift, and go to state 54


State 23

   78 merge_arr: arr_elements • "+" arr_elements

    "+"  shift, and go to state 55


State 24

    3 program: program build_func • NEWLINE

    NEWLINE  shift, and go to state 56


State 25

   28 build_func: func • ";"

    ";"  shift, and go to state 57


State 26

    4 program: program decl_func • NEWLINE

    NEWLINE  shift, and go to state 58


State 27

   47 decl_func: name_func • code_func

    "{"  shift, and go to state 59

    code_func  go to state 60


State 28

    5 program: program decl_ops • NEWLINE

    NEWLINE  shift, and go to state 61


State 29

   63 arithm_expr: sign •

    $default  reduce using rule 63 (arithm_expr)


State 30

   56 decl_ops: arithm_expr •
   65 arithm_expr: arithm_expr • "+" arithm_expr
   66            | arithm_expr • "-" arithm_expr
   67            | arithm_expr • "*" arithm_expr
   68            | arithm_expr • "/" arithm_expr

    "+"  shift, and go to state 62
    "-"  shift, and go to state 63
    "*"  shift, and go to state 64
    "/"  shift, and go to state 65

    $default  reduce using rule 56 (decl_ops)


State 31

   57 decl_ops: cmp_expr •
   72 cmp_expr: cmp_expr • ">" cmp_expr
   73         | cmp_expr • "<" cmp_expr
   74         | cmp_expr • "<=" cmp_expr
   75         | cmp_expr • ">=" cmp_expr
   76         | cmp_expr • "==" cmp_expr
   77         | cmp_expr • "!=" cmp_expr

    "<"   shift, and go to state 66
    ">"   shift, and go to state 67
    "<="  shift, and go to state 68
    ">="  shift, and go to state 69
    "=="  shift, and go to state 70
    "!="  shift, and go to state 71

    $default  reduce using rule 57 (decl_ops)


State 32

   58 decl_ops: merge_arr •

    $default  reduce using rule 58 (decl_ops)


State 33

   16 decl_arr: IDENTIFIER "=" • arr_elements ";"

    "["  shift, and go to state 14

    arr_elements  go to state 72


State 34

   48 name_func: IDENTIFIER •

    $default  reduce using rule 48 (name_func)


State 35

   49 name_func: SFUNC name_func • params NEWLINE

    "("  shift, and go to state 73

    params  go to state 74


State 36

   59 sign: INTEGER •

    $default  reduce using rule 59 (sign)


State 37

   60 sign: FLOAT •

    $default  reduce using rule 60 (sign)


State 38

   61 sign: "+" sign •

    $default  reduce using rule 61 (sign)


State 39

   62 sign: "-" sign •

    $default  reduce using rule 62 (sign)


State 40

   26 str: STRING •

    $default  reduce using rule 26 (str)


State 41

   22 integ: INTEGER •

    $default  reduce using rule 22 (integ)


State 42

   24 fl: FLOAT •

    $default  reduce using rule 24 (fl)


State 43

   18 arr_elements: "[" "]" •

    $default  reduce using rule 18 (arr_elements)


State 44

   19 arr_elements: "[" integ • "]"
   23 integ: integ • "," integ

    "]"  shift, and go to state 75
    ","  shift, and go to state 76


State 45

   20 arr_elements: "[" fl • "]"
   25 fl: fl • "," fl

    "]"  shift, and go to state 77
    ","  shift, and go to state 78


State 46

   21 arr_elements: "[" str • "]"
   27 str: str • "," str

    "]"  shift, and go to state 79
    ","  shift, and go to state 80


State 47

   29 func: SSCAN "(" • scan_params ")"

    IDENTIFIER  shift, and go to state 81

    scan_params  go to state 82


State 48

   32 func: SPRINT "(" • print_params ")"

    IDENTIFIER  shift, and go to state 83
    STRING      shift, and go to state 84
    INTEGER     shift, and go to state 85
    FLOAT       shift, and go to state 86
    SSCAN       shift, and go to state 15
    SPRINT      shift, and go to state 16
    SLEN        shift, and go to state 17
    SCMP        shift, and go to state 18

    pos_elem      go to state 87
    func          go to state 88
    print_params  go to state 89


State 49

   30 func: SLEN "(" • len_params ")"

    IDENTIFIER  shift, and go to state 90
    STRING      shift, and go to state 91
    "["         shift, and go to state 14

    arr_elements  go to state 92
    len_params    go to state 93


State 50

   31 func: SCMP "(" • cmp_params ")"

    IDENTIFIER  shift, and go to state 94
    STRING      shift, and go to state 95

    cmp_params  go to state 96


State 51

    1 program: program decl_var NEWLINE •

    $default  reduce using rule 1 (program)


State 52

   14 var: IDENTIFIER •

    $default  reduce using rule 14 (var)


State 53

    8 decl_var: type var • ";"
   15 var: var • "," var

    ","  shift, and go to state 97
    ";"  shift, and go to state 98


State 54

    2 program: program decl_arr NEWLINE •

    $default  reduce using rule 2 (program)


State 55

   78 merge_arr: arr_elements "+" • arr_elements

    "["  shift, and go to state 14

    arr_elements  go to state 99


State 56

    3 program: program build_func NEWLINE •

    $default  reduce using rule 3 (program)


State 57

   28 build_func: func ";" •

    $default  reduce using rule 28 (build_func)


State 58

    4 program: program decl_func NEWLINE •

    $default  reduce using rule 4 (program)


State 59

   54 code_func: "{" • code NEWLINE "}"

    $default  reduce using rule 55 (code)

    code  go to state 100


State 60

   47 decl_func: name_func code_func •

    $default  reduce using rule 47 (decl_func)


State 61

    5 program: program decl_ops NEWLINE •

    $default  reduce using rule 5 (program)


State 62

   65 arithm_expr: arithm_expr "+" • arithm_expr

    IDENTIFIER  shift, and go to state 101
    INTEGER     shift, and go to state 36
    FLOAT       shift, and go to state 37
    "+"         shift, and go to state 12
    "-"         shift, and go to state 13

    sign         go to state 29
    arithm_expr  go to state 102


State 63

   66 arithm_expr: arithm_expr "-" • arithm_expr

    IDENTIFIER  shift, and go to state 101
    INTEGER     shift, and go to state 36
    FLOAT       shift, and go to state 37
    "+"         shift, and go to state 12
    "-"         shift, and go to state 13

    sign         go to state 29
    arithm_expr  go to state 103


State 64

   67 arithm_expr: arithm_expr "*" • arithm_expr

    IDENTIFIER  shift, and go to state 101
    INTEGER     shift, and go to state 36
    FLOAT       shift, and go to state 37
    "+"         shift, and go to state 12
    "-"         shift, and go to state 13

    sign         go to state 29
    arithm_expr  go to state 104


State 65

   68 arithm_expr: arithm_expr "/" • arithm_expr

    IDENTIFIER  shift, and go to state 101
    INTEGER     shift, and go to state 36
    FLOAT       shift, and go to state 37
    "+"         shift, and go to state 12
    "-"         shift, and go to state 13

    sign         go to state 29
    arithm_expr  go to state 105


State 66

   73 cmp_expr: cmp_expr "<" • cmp_expr

    IDENTIFIER  shift, and go to state 106
    INTEGER     shift, and go to state 107
    FLOAT       shift, and go to state 108

    cmp_expr  go to state 109


State 67

   72 cmp_expr: cmp_expr ">" • cmp_expr

    IDENTIFIER  shift, and go to state 106
    INTEGER     shift, and go to state 107
    FLOAT       shift, and go to state 108

    cmp_expr  go to state 110


State 68

   74 cmp_expr: cmp_expr "<=" • cmp_expr

    IDENTIFIER  shift, and go to state 106
    INTEGER     shift, and go to state 107
    FLOAT       shift, and go to state 108

    cmp_expr  go to state 111


State 69

   75 cmp_expr: cmp_expr ">=" • cmp_expr

    IDENTIFIER  shift, and go to state 106
    INTEGER     shift, and go to state 107
    FLOAT       shift, and go to state 108

    cmp_expr  go to state 112


State 70

   76 cmp_expr: cmp_expr "==" • cmp_expr

    IDENTIFIER  shift, and go to state 106
    INTEGER     shift, and go to state 107
    FLOAT       shift, and go to state 108

    cmp_expr  go to state 113


State 71

   77 cmp_expr: cmp_expr "!=" • cmp_expr

    IDENTIFIER  shift, and go to state 106
    INTEGER     shift, and go to state 107
    FLOAT       shift, and go to state 108

    cmp_expr  go to state 114


State 72

   16 decl_arr: IDENTIFIER "=" arr_elements • ";"

    ";"  shift, and go to state 115


State 73

   50 params: "(" • ")"
   51       | "(" • type_params ")"

    SDOUBLE  shift, and go to state 6
    SINT     shift, and go to state 7
    SLONG    shift, and go to state 9
    SFLOAT   shift, and go to state 10
    SSHORT   shift, and go to state 11
    ")"      shift, and go to state 116

    type         go to state 117
    type_params  go to state 118


State 74

   49 name_func: SFUNC name_func params • NEWLINE

    NEWLINE  shift, and go to state 119


State 75

   19 arr_elements: "[" integ "]" •

    $default  reduce using rule 19 (arr_elements)


State 76

   23 integ: integ "," • integ

    INTEGER  shift, and go to state 41

    integ  go to state 120


State 77

   20 arr_elements: "[" fl "]" •

    $default  reduce using rule 20 (arr_elements)


State 78

   25 fl: fl "," • fl

    FLOAT  shift, and go to state 42

    fl  go to state 121


State 79

   21 arr_elements: "[" str "]" •

    $default  reduce using rule 21 (arr_elements)


State 80

   27 str: str "," • str

    STRING  shift, and go to state 40

    str  go to state 122


State 81

   33 scan_params: IDENTIFIER •

    $default  reduce using rule 33 (scan_params)


State 82

   29 func: SSCAN "(" scan_params • ")"

    ")"  shift, and go to state 123


State 83

   17 pos_elem: IDENTIFIER • "[" INTEGER "]"
   41 print_params: IDENTIFIER •

    "["  shift, and go to state 124

    $default  reduce using rule 41 (print_params)


State 84

   40 print_params: STRING •

    $default  reduce using rule 40 (print_params)


State 85

   42 print_params: INTEGER •

    $default  reduce using rule 42 (print_params)


State 86

   43 print_params: FLOAT •

    $default  reduce using rule 43 (print_params)


State 87

   45 print_params: pos_elem •

    $default  reduce using rule 45 (print_params)


State 88

   44 print_params: func •

    $default  reduce using rule 44 (print_params)


State 89

   32 func: SPRINT "(" print_params • ")"
   46 print_params: print_params • "," print_params

    ")"  shift, and go to state 125
    ","  shift, and go to state 126


State 90

   36 len_params: IDENTIFIER •

    $default  reduce using rule 36 (len_params)


State 91

   35 len_params: STRING •

    $default  reduce using rule 35 (len_params)


State 92

   34 len_params: arr_elements •

    $default  reduce using rule 34 (len_params)


State 93

   30 func: SLEN "(" len_params • ")"

    ")"  shift, and go to state 127


State 94

   38 cmp_params: IDENTIFIER •

    $default  reduce using rule 38 (cmp_params)


State 95

   37 cmp_params: STRING •

    $default  reduce using rule 37 (cmp_params)


State 96

   31 func: SCMP "(" cmp_params • ")"
   39 cmp_params: cmp_params • "," cmp_params

    ")"  shift, and go to state 128
    ","  shift, and go to state 129


State 97

   15 var: var "," • var

    IDENTIFIER  shift, and go to state 52

    var  go to state 130


State 98

    8 decl_var: type var ";" •

    $default  reduce using rule 8 (decl_var)


State 99

   78 merge_arr: arr_elements "+" arr_elements •

    $default  reduce using rule 78 (merge_arr)


State 100

   54 code_func: "{" code • NEWLINE "}"

    NEWLINE  shift, and go to state 131


State 101

   64 arithm_expr: IDENTIFIER •

    $default  reduce using rule 64 (arithm_expr)


State 102

   65 arithm_expr: arithm_expr • "+" arithm_expr
   65            | arithm_expr "+" arithm_expr •
   66            | arithm_expr • "-" arithm_expr
   67            | arithm_expr • "*" arithm_expr
   68            | arithm_expr • "/" arithm_expr

    "*"  shift, and go to state 64
    "/"  shift, and go to state 65

    $default  reduce using rule 65 (arithm_expr)


State 103

   65 arithm_expr: arithm_expr • "+" arithm_expr
   66            | arithm_expr • "-" arithm_expr
   66            | arithm_expr "-" arithm_expr •
   67            | arithm_expr • "*" arithm_expr
   68            | arithm_expr • "/" arithm_expr

    "*"  shift, and go to state 64
    "/"  shift, and go to state 65

    $default  reduce using rule 66 (arithm_expr)


State 104

   65 arithm_expr: arithm_expr • "+" arithm_expr
   66            | arithm_expr • "-" arithm_expr
   67            | arithm_expr • "*" arithm_expr
   67            | arithm_expr "*" arithm_expr •
   68            | arithm_expr • "/" arithm_expr

    $default  reduce using rule 67 (arithm_expr)


State 105

   65 arithm_expr: arithm_expr • "+" arithm_expr
   66            | arithm_expr • "-" arithm_expr
   67            | arithm_expr • "*" arithm_expr
   68            | arithm_expr • "/" arithm_expr
   68            | arithm_expr "/" arithm_expr •

    $default  reduce using rule 68 (arithm_expr)


State 106

   71 cmp_expr: IDENTIFIER •

    $default  reduce using rule 71 (cmp_expr)


State 107

   69 cmp_expr: INTEGER •

    $default  reduce using rule 69 (cmp_expr)


State 108

   70 cmp_expr: FLOAT •

    $default  reduce using rule 70 (cmp_expr)


State 109

   72 cmp_expr: cmp_expr • ">" cmp_expr
   73         | cmp_expr • "<" cmp_expr
   73         | cmp_expr "<" cmp_expr •
   74         | cmp_expr • "<=" cmp_expr
   75         | cmp_expr • ">=" cmp_expr
   76         | cmp_expr • "==" cmp_expr
   77         | cmp_expr • "!=" cmp_expr

    $default  reduce using rule 73 (cmp_expr)


State 110

   72 cmp_expr: cmp_expr • ">" cmp_expr
   72         | cmp_expr ">" cmp_expr •
   73         | cmp_expr • "<" cmp_expr
   74         | cmp_expr • "<=" cmp_expr
   75         | cmp_expr • ">=" cmp_expr
   76         | cmp_expr • "==" cmp_expr
   77         | cmp_expr • "!=" cmp_expr

    $default  reduce using rule 72 (cmp_expr)


State 111

   72 cmp_expr: cmp_expr • ">" cmp_expr
   73         | cmp_expr • "<" cmp_expr
   74         | cmp_expr • "<=" cmp_expr
   74         | cmp_expr "<=" cmp_expr •
   75         | cmp_expr • ">=" cmp_expr
   76         | cmp_expr • "==" cmp_expr
   77         | cmp_expr • "!=" cmp_expr

    $default  reduce using rule 74 (cmp_expr)


State 112

   72 cmp_expr: cmp_expr • ">" cmp_expr
   73         | cmp_expr • "<" cmp_expr
   74         | cmp_expr • "<=" cmp_expr
   75         | cmp_expr • ">=" cmp_expr
   75         | cmp_expr ">=" cmp_expr •
   76         | cmp_expr • "==" cmp_expr
   77         | cmp_expr • "!=" cmp_expr

    $default  reduce using rule 75 (cmp_expr)


State 113

   72 cmp_expr: cmp_expr • ">" cmp_expr
   73         | cmp_expr • "<" cmp_expr
   74         | cmp_expr • "<=" cmp_expr
   75         | cmp_expr • ">=" cmp_expr
   76         | cmp_expr • "==" cmp_expr
   76         | cmp_expr "==" cmp_expr •
   77         | cmp_expr • "!=" cmp_expr

    "<"   shift, and go to state 66
    ">"   shift, and go to state 67
    "<="  shift, and go to state 68
    ">="  shift, and go to state 69

    $default  reduce using rule 76 (cmp_expr)


State 114

   72 cmp_expr: cmp_expr • ">" cmp_expr
   73         | cmp_expr • "<" cmp_expr
   74         | cmp_expr • "<=" cmp_expr
   75         | cmp_expr • ">=" cmp_expr
   76         | cmp_expr • "==" cmp_expr
   77         | cmp_expr • "!=" cmp_expr
   77         | cmp_expr "!=" cmp_expr •

    "<"   shift, and go to state 66
    ">"   shift, and go to state 67
    "<="  shift, and go to state 68
    ">="  shift, and go to state 69

    $default  reduce using rule 77 (cmp_expr)


State 115

   16 decl_arr: IDENTIFIER "=" arr_elements ";" •

    $default  reduce using rule 16 (decl_arr)


State 116

   50 params: "(" ")" •

    $default  reduce using rule 50 (params)


State 117

   52 type_params: type • IDENTIFIER

    IDENTIFIER  shift, and go to state 132


State 118

   51 params: "(" type_params • ")"
   53 type_params: type_params • "," type_params

    ")"  shift, and go to state 133
    ","  shift, and go to state 134


State 119

   49 name_func: SFUNC name_func params NEWLINE •

    $default  reduce using rule 49 (name_func)


State 120

   23 integ: integ • "," integ
   23      | integ "," integ •

    $default  reduce using rule 23 (integ)


State 121

   25 fl: fl • "," fl
   25   | fl "," fl •

    $default  reduce using rule 25 (fl)


State 122

   27 str: str • "," str
   27    | str "," str •

    $default  reduce using rule 27 (str)


State 123

   29 func: SSCAN "(" scan_params ")" •

    $default  reduce using rule 29 (func)


State 124

   17 pos_elem: IDENTIFIER "[" • INTEGER "]"

    INTEGER  shift, and go to state 135


State 125

   32 func: SPRINT "(" print_params ")" •

    $default  reduce using rule 32 (func)


State 126

   46 print_params: print_params "," • print_params

    IDENTIFIER  shift, and go to state 83
    STRING      shift, and go to state 84
    INTEGER     shift, and go to state 85
    FLOAT       shift, and go to state 86
    SSCAN       shift, and go to state 15
    SPRINT      shift, and go to state 16
    SLEN        shift, and go to state 17
    SCMP        shift, and go to state 18

    pos_elem      go to state 87
    func          go to state 88
    print_params  go to state 136


State 127

   30 func: SLEN "(" len_params ")" •

    $default  reduce using rule 30 (func)


State 128

   31 func: SCMP "(" cmp_params ")" •

    $default  reduce using rule 31 (func)


State 129

   39 cmp_params: cmp_params "," • cmp_params

    IDENTIFIER  shift, and go to state 94
    STRING      shift, and go to state 95

    cmp_params  go to state 137


State 130

   15 var: var • "," var
   15    | var "," var •

    $default  reduce using rule 15 (var)


State 131

   54 code_func: "{" code NEWLINE • "}"

    "}"  shift, and go to state 138


State 132

   52 type_params: type IDENTIFIER •

    $default  reduce using rule 52 (type_params)


State 133

   51 params: "(" type_params ")" •

    $default  reduce using rule 51 (params)


State 134

   53 type_params: type_params "," • type_params

    SDOUBLE  shift, and go to state 6
    SINT     shift, and go to state 7
    SLONG    shift, and go to state 9
    SFLOAT   shift, and go to state 10
    SSHORT   shift, and go to state 11

    type         go to state 117
    type_params  go to state 139


State 135

   17 pos_elem: IDENTIFIER "[" INTEGER • "]"

    "]"  shift, and go to state 140


State 136

   46 print_params: print_params • "," print_params
   46             | print_params "," print_params •

    $default  reduce using rule 46 (print_params)


State 137

   39 cmp_params: cmp_params • "," cmp_params
   39           | cmp_params "," cmp_params •

    $default  reduce using rule 39 (cmp_params)


State 138

   54 code_func: "{" code NEWLINE "}" •

    $default  reduce using rule 54 (code_func)


State 139

   53 type_params: type_params • "," type_params
   53            | type_params "," type_params •

    $default  reduce using rule 53 (type_params)


State 140

   17 pos_elem: IDENTIFIER "[" INTEGER "]" •

    $default  reduce using rule 17 (pos_elem)
