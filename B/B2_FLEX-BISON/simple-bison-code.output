Terminals unused in grammar

    BREAK
    DO
    IF
    SIZEOF
    CASE
    STRUCT
    ELSE
    SWITCH
    CONST
    RETURN
    VOID
    CONTINUE
    FOR
    WHILE
    "+"
    "*="
    "--"
    "-"
    "/="
    "<"
    "*"
    "!"
    ">"
    "/"
    "&&"
    "<="
    "%"
    "||"
    ">="
    "=="
    "&"
    "+="
    "!="
    "-="
    "++"
    "{"
    "}"
    "\\"
    END_OF_FILE
    UNKNOWN


Rules useless in parser due to conflicts

   46 decl_func: func ";"


State 15 conflicts: 1 shift/reduce
State 30 conflicts: 1 reduce/reduce
State 45 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: program decl_var NEWLINE
    2        | program decl_arr NEWLINE
    3        | program decl_arr
    4        | program build_func NEWLINE
    5        | program decl_func NEWLINE
    6        | program NEWLINE
    7        | ε

    8 decl_arr: IDENTIFIER "=" elements ";"

    9 pos_elem: IDENTIFIER "[" INTEGER "]"

   10 elements: "[" "]"
   11         | "[" arr_int "]"
   12         | "[" arr_fl "]"
   13         | "[" arr_str "]"

   14 arr_int: INTEGER
   15        | arr_int "," arr_int

   16 arr_fl: FLOAT
   17       | arr_fl "," arr_fl

   18 arr_str: STRING
   19        | arr_str "," arr_str

   20 build_func: func ";"

   21 func: SCAN "(" scan_params ")"
   22     | LEN "(" len_params ")"
   23     | CMP "(" cmp_params ")"
   24     | PRINT "(" print_params ")"

   25 scan_params: IDENTIFIER

   26 len_params: elements
   27           | STRING
   28           | IDENTIFIER

   29 cmp_params: STRING
   30           | IDENTIFIER
   31           | cmp_params "," cmp_params

   32 print_params: STRING
   33             | IDENTIFIER
   34             | INTEGER
   35             | func
   36             | pos_elem
   37             | print_params "," print_params

   38 decl_var: type var ";"

   39 type: INT
   40     | FLOAT_KEY
   41     | DOUBLE
   42     | SHORT
   43     | LONG

   44 var: IDENTIFIER
   45    | var "," var

   46 decl_func: func ";"

   47 func: IDENTIFIER
   48     | FUNC func params

   49 params: "(" ")"
   50       | "(" type_params ")"

   51 type_params: type IDENTIFIER
   52            | type_params "," type_params


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SCAN (258) 21
    LEN (259) 22
    CMP (260) 23
    PRINT (261) 24
    IDENTIFIER (262) 8 9 25 28 30 33 44 47 51
    STRING (263) 18 27 29 32
    INTEGER (264) 9 14 34
    FLOAT (265) 16
    BREAK (266)
    DO (267)
    IF (268)
    SIZEOF (269)
    CASE (270)
    DOUBLE (271) 41
    INT (272) 39
    STRUCT (273)
    FUNC (274) 48
    ELSE (275)
    LONG (276) 43
    SWITCH (277)
    CONST (278)
    FLOAT_KEY (279) 40
    RETURN (280)
    VOID (281)
    CONTINUE (282)
    FOR (283)
    SHORT (284) 42
    WHILE (285)
    "+" (286)
    "*=" (287)
    "--" (288)
    "-" (289)
    "/=" (290)
    "<" (291)
    "*" (292)
    "!" (293)
    ">" (294)
    "/" (295)
    "&&" (296)
    "<=" (297)
    "%" (298)
    "||" (299)
    ">=" (300)
    "=" (301) 8
    "==" (302)
    "&" (303)
    "+=" (304)
    "!=" (305)
    "-=" (306)
    "++" (307)
    "(" (308) 21 22 23 24 49 50
    ")" (309) 21 22 23 24 49 50
    "[" (310) 9 10 11 12 13
    "]" (311) 9 10 11 12 13
    "{" (312)
    "}" (313)
    "," (314) 15 17 19 31 37 45 52
    "\\" (315)
    ";" (316) 8 20 38 46
    NEWLINE (317) 1 2 4 5 6
    END_OF_FILE (318)
    UNKNOWN (319)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    program (66)
        on left: 1 2 3 4 5 6 7
        on right: 0 1 2 3 4 5 6
    decl_arr (67)
        on left: 8
        on right: 2 3
    pos_elem (68)
        on left: 9
        on right: 36
    elements (69)
        on left: 10 11 12 13
        on right: 8 26
    arr_int (70)
        on left: 14 15
        on right: 11 15
    arr_fl (71)
        on left: 16 17
        on right: 12 17
    arr_str (72)
        on left: 18 19
        on right: 13 19
    build_func (73)
        on left: 20
        on right: 4
    func (74)
        on left: 21 22 23 24 47 48
        on right: 20 35 46 48
    scan_params (75)
        on left: 25
        on right: 21
    len_params (76)
        on left: 26 27 28
        on right: 22
    cmp_params (77)
        on left: 29 30 31
        on right: 23 31
    print_params (78)
        on left: 32 33 34 35 36 37
        on right: 24 37
    decl_var (79)
        on left: 38
        on right: 1
    type (80)
        on left: 39 40 41 42 43
        on right: 38 51
    var (81)
        on left: 44 45
        on right: 38 45
    decl_func (82)
        on left: 46
        on right: 5
    params (83)
        on left: 49 50
        on right: 48
    type_params (84)
        on left: 51 52
        on right: 50 52


State 0

    0 $accept: • program $end

    $default  reduce using rule 7 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    1 program: program • decl_var NEWLINE
    2        | program • decl_arr NEWLINE
    3        | program • decl_arr
    4        | program • build_func NEWLINE
    5        | program • decl_func NEWLINE
    6        | program • NEWLINE

    $end        shift, and go to state 2
    SCAN        shift, and go to state 3
    LEN         shift, and go to state 4
    CMP         shift, and go to state 5
    PRINT       shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    DOUBLE      shift, and go to state 8
    INT         shift, and go to state 9
    FUNC        shift, and go to state 10
    LONG        shift, and go to state 11
    FLOAT_KEY   shift, and go to state 12
    SHORT       shift, and go to state 13
    NEWLINE     shift, and go to state 14

    decl_arr    go to state 15
    build_func  go to state 16
    func        go to state 17
    decl_var    go to state 18
    type        go to state 19
    decl_func   go to state 20


State 2

    0 $accept: program $end •

    $default  accept


State 3

   21 func: SCAN • "(" scan_params ")"

    "("  shift, and go to state 21


State 4

   22 func: LEN • "(" len_params ")"

    "("  shift, and go to state 22


State 5

   23 func: CMP • "(" cmp_params ")"

    "("  shift, and go to state 23


State 6

   24 func: PRINT • "(" print_params ")"

    "("  shift, and go to state 24


State 7

    8 decl_arr: IDENTIFIER • "=" elements ";"
   47 func: IDENTIFIER •

    "="  shift, and go to state 25

    $default  reduce using rule 47 (func)


State 8

   41 type: DOUBLE •

    $default  reduce using rule 41 (type)


State 9

   39 type: INT •

    $default  reduce using rule 39 (type)


State 10

   48 func: FUNC • func params

    SCAN        shift, and go to state 3
    LEN         shift, and go to state 4
    CMP         shift, and go to state 5
    PRINT       shift, and go to state 6
    IDENTIFIER  shift, and go to state 26
    FUNC        shift, and go to state 10

    func  go to state 27


State 11

   43 type: LONG •

    $default  reduce using rule 43 (type)


State 12

   40 type: FLOAT_KEY •

    $default  reduce using rule 40 (type)


State 13

   42 type: SHORT •

    $default  reduce using rule 42 (type)


State 14

    6 program: program NEWLINE •

    $default  reduce using rule 6 (program)


State 15

    2 program: program decl_arr • NEWLINE
    3        | program decl_arr •

    NEWLINE  shift, and go to state 28

    NEWLINE   [reduce using rule 3 (program)]
    $default  reduce using rule 3 (program)


State 16

    4 program: program build_func • NEWLINE

    NEWLINE  shift, and go to state 29


State 17

   20 build_func: func • ";"
   46 decl_func: func • ";"

    ";"  shift, and go to state 30


State 18

    1 program: program decl_var • NEWLINE

    NEWLINE  shift, and go to state 31


State 19

   38 decl_var: type • var ";"

    IDENTIFIER  shift, and go to state 32

    var  go to state 33


State 20

    5 program: program decl_func • NEWLINE

    NEWLINE  shift, and go to state 34


State 21

   21 func: SCAN "(" • scan_params ")"

    IDENTIFIER  shift, and go to state 35

    scan_params  go to state 36


State 22

   22 func: LEN "(" • len_params ")"

    IDENTIFIER  shift, and go to state 37
    STRING      shift, and go to state 38
    "["         shift, and go to state 39

    elements    go to state 40
    len_params  go to state 41


State 23

   23 func: CMP "(" • cmp_params ")"

    IDENTIFIER  shift, and go to state 42
    STRING      shift, and go to state 43

    cmp_params  go to state 44


State 24

   24 func: PRINT "(" • print_params ")"

    SCAN        shift, and go to state 3
    LEN         shift, and go to state 4
    CMP         shift, and go to state 5
    PRINT       shift, and go to state 6
    IDENTIFIER  shift, and go to state 45
    STRING      shift, and go to state 46
    INTEGER     shift, and go to state 47
    FUNC        shift, and go to state 10

    pos_elem      go to state 48
    func          go to state 49
    print_params  go to state 50


State 25

    8 decl_arr: IDENTIFIER "=" • elements ";"

    "["  shift, and go to state 39

    elements  go to state 51


State 26

   47 func: IDENTIFIER •

    $default  reduce using rule 47 (func)


State 27

   48 func: FUNC func • params

    "("  shift, and go to state 52

    params  go to state 53


State 28

    2 program: program decl_arr NEWLINE •

    $default  reduce using rule 2 (program)


State 29

    4 program: program build_func NEWLINE •

    $default  reduce using rule 4 (program)


State 30

   20 build_func: func ";" •
   46 decl_func: func ";" •

    NEWLINE   reduce using rule 20 (build_func)
    NEWLINE   [reduce using rule 46 (decl_func)]
    $default  reduce using rule 20 (build_func)


State 31

    1 program: program decl_var NEWLINE •

    $default  reduce using rule 1 (program)


State 32

   44 var: IDENTIFIER •

    $default  reduce using rule 44 (var)


State 33

   38 decl_var: type var • ";"
   45 var: var • "," var

    ","  shift, and go to state 54
    ";"  shift, and go to state 55


State 34

    5 program: program decl_func NEWLINE •

    $default  reduce using rule 5 (program)


State 35

   25 scan_params: IDENTIFIER •

    $default  reduce using rule 25 (scan_params)


State 36

   21 func: SCAN "(" scan_params • ")"

    ")"  shift, and go to state 56


State 37

   28 len_params: IDENTIFIER •

    $default  reduce using rule 28 (len_params)


State 38

   27 len_params: STRING •

    $default  reduce using rule 27 (len_params)


State 39

   10 elements: "[" • "]"
   11         | "[" • arr_int "]"
   12         | "[" • arr_fl "]"
   13         | "[" • arr_str "]"

    STRING   shift, and go to state 57
    INTEGER  shift, and go to state 58
    FLOAT    shift, and go to state 59
    "]"      shift, and go to state 60

    arr_int  go to state 61
    arr_fl   go to state 62
    arr_str  go to state 63


State 40

   26 len_params: elements •

    $default  reduce using rule 26 (len_params)


State 41

   22 func: LEN "(" len_params • ")"

    ")"  shift, and go to state 64


State 42

   30 cmp_params: IDENTIFIER •

    $default  reduce using rule 30 (cmp_params)


State 43

   29 cmp_params: STRING •

    $default  reduce using rule 29 (cmp_params)


State 44

   23 func: CMP "(" cmp_params • ")"
   31 cmp_params: cmp_params • "," cmp_params

    ")"  shift, and go to state 65
    ","  shift, and go to state 66


State 45

    9 pos_elem: IDENTIFIER • "[" INTEGER "]"
   33 print_params: IDENTIFIER •
   47 func: IDENTIFIER •

    "["  shift, and go to state 67

    ")"       reduce using rule 33 (print_params)
    ")"       [reduce using rule 47 (func)]
    ","       reduce using rule 33 (print_params)
    ","       [reduce using rule 47 (func)]
    $default  reduce using rule 33 (print_params)


State 46

   32 print_params: STRING •

    $default  reduce using rule 32 (print_params)


State 47

   34 print_params: INTEGER •

    $default  reduce using rule 34 (print_params)


State 48

   36 print_params: pos_elem •

    $default  reduce using rule 36 (print_params)


State 49

   35 print_params: func •

    $default  reduce using rule 35 (print_params)


State 50

   24 func: PRINT "(" print_params • ")"
   37 print_params: print_params • "," print_params

    ")"  shift, and go to state 68
    ","  shift, and go to state 69


State 51

    8 decl_arr: IDENTIFIER "=" elements • ";"

    ";"  shift, and go to state 70


State 52

   49 params: "(" • ")"
   50       | "(" • type_params ")"

    DOUBLE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 11
    FLOAT_KEY  shift, and go to state 12
    SHORT      shift, and go to state 13
    ")"        shift, and go to state 71

    type         go to state 72
    type_params  go to state 73


State 53

   48 func: FUNC func params •

    $default  reduce using rule 48 (func)


State 54

   45 var: var "," • var

    IDENTIFIER  shift, and go to state 32

    var  go to state 74


State 55

   38 decl_var: type var ";" •

    $default  reduce using rule 38 (decl_var)


State 56

   21 func: SCAN "(" scan_params ")" •

    $default  reduce using rule 21 (func)


State 57

   18 arr_str: STRING •

    $default  reduce using rule 18 (arr_str)


State 58

   14 arr_int: INTEGER •

    $default  reduce using rule 14 (arr_int)


State 59

   16 arr_fl: FLOAT •

    $default  reduce using rule 16 (arr_fl)


State 60

   10 elements: "[" "]" •

    $default  reduce using rule 10 (elements)


State 61

   11 elements: "[" arr_int • "]"
   15 arr_int: arr_int • "," arr_int

    "]"  shift, and go to state 75
    ","  shift, and go to state 76


State 62

   12 elements: "[" arr_fl • "]"
   17 arr_fl: arr_fl • "," arr_fl

    "]"  shift, and go to state 77
    ","  shift, and go to state 78


State 63

   13 elements: "[" arr_str • "]"
   19 arr_str: arr_str • "," arr_str

    "]"  shift, and go to state 79
    ","  shift, and go to state 80


State 64

   22 func: LEN "(" len_params ")" •

    $default  reduce using rule 22 (func)


State 65

   23 func: CMP "(" cmp_params ")" •

    $default  reduce using rule 23 (func)


State 66

   31 cmp_params: cmp_params "," • cmp_params

    IDENTIFIER  shift, and go to state 42
    STRING      shift, and go to state 43

    cmp_params  go to state 81


State 67

    9 pos_elem: IDENTIFIER "[" • INTEGER "]"

    INTEGER  shift, and go to state 82


State 68

   24 func: PRINT "(" print_params ")" •

    $default  reduce using rule 24 (func)


State 69

   37 print_params: print_params "," • print_params

    SCAN        shift, and go to state 3
    LEN         shift, and go to state 4
    CMP         shift, and go to state 5
    PRINT       shift, and go to state 6
    IDENTIFIER  shift, and go to state 45
    STRING      shift, and go to state 46
    INTEGER     shift, and go to state 47
    FUNC        shift, and go to state 10

    pos_elem      go to state 48
    func          go to state 49
    print_params  go to state 83


State 70

    8 decl_arr: IDENTIFIER "=" elements ";" •

    $default  reduce using rule 8 (decl_arr)


State 71

   49 params: "(" ")" •

    $default  reduce using rule 49 (params)


State 72

   51 type_params: type • IDENTIFIER

    IDENTIFIER  shift, and go to state 84


State 73

   50 params: "(" type_params • ")"
   52 type_params: type_params • "," type_params

    ")"  shift, and go to state 85
    ","  shift, and go to state 86


State 74

   45 var: var • "," var
   45    | var "," var •

    $default  reduce using rule 45 (var)


State 75

   11 elements: "[" arr_int "]" •

    $default  reduce using rule 11 (elements)


State 76

   15 arr_int: arr_int "," • arr_int

    INTEGER  shift, and go to state 58

    arr_int  go to state 87


State 77

   12 elements: "[" arr_fl "]" •

    $default  reduce using rule 12 (elements)


State 78

   17 arr_fl: arr_fl "," • arr_fl

    FLOAT  shift, and go to state 59

    arr_fl  go to state 88


State 79

   13 elements: "[" arr_str "]" •

    $default  reduce using rule 13 (elements)


State 80

   19 arr_str: arr_str "," • arr_str

    STRING  shift, and go to state 57

    arr_str  go to state 89


State 81

   31 cmp_params: cmp_params • "," cmp_params
   31           | cmp_params "," cmp_params •

    $default  reduce using rule 31 (cmp_params)


State 82

    9 pos_elem: IDENTIFIER "[" INTEGER • "]"

    "]"  shift, and go to state 90


State 83

   37 print_params: print_params • "," print_params
   37             | print_params "," print_params •

    $default  reduce using rule 37 (print_params)


State 84

   51 type_params: type IDENTIFIER •

    $default  reduce using rule 51 (type_params)


State 85

   50 params: "(" type_params ")" •

    $default  reduce using rule 50 (params)


State 86

   52 type_params: type_params "," • type_params

    DOUBLE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 11
    FLOAT_KEY  shift, and go to state 12
    SHORT      shift, and go to state 13

    type         go to state 72
    type_params  go to state 91


State 87

   15 arr_int: arr_int • "," arr_int
   15        | arr_int "," arr_int •

    $default  reduce using rule 15 (arr_int)


State 88

   17 arr_fl: arr_fl • "," arr_fl
   17       | arr_fl "," arr_fl •

    $default  reduce using rule 17 (arr_fl)


State 89

   19 arr_str: arr_str • "," arr_str
   19        | arr_str "," arr_str •

    $default  reduce using rule 19 (arr_str)


State 90

    9 pos_elem: IDENTIFIER "[" INTEGER "]" •

    $default  reduce using rule 9 (pos_elem)


State 91

   52 type_params: type_params • "," type_params
   52            | type_params "," type_params •

    $default  reduce using rule 52 (type_params)
