/************ Test case [#2.1] : CODE-STRUCTURE ************/// ========== Test case [#2.1.1] : LOGICAL LINES ==========
	[FLEX] Line=4, token=IDENTIFIER, value="x"
	[FLEX] Line=4, token=OPERATOR, value="=="
	[FLEX] Line=4, token=IDENTIFIER, value="y"
[BISON] Line=4, expression="Σύγκριση"

	[FLEX] Line=5, token=IDENTIFIER, value="x"
	[FLEX] Line=5, token=OPERATOR, value="<"
	[FLEX] Line=5, token=IDENTIFIER, value="y"
[BISON] Line=5, expression="Σύγκριση"

	[FLEX] Line=6, token=IDENTIFIER, value="x"
	[FLEX] Line=6, token=OPERATOR, value=">"
	[FLEX] Line=6, token=IDENTIFIER, value="y"
[BISON] Line=6, expression="Σύγκριση"

	[FLEX] Line=7, token=IDENTIFIER, value="x"
	[FLEX] Line=7, token=OPERATOR, value="<="
	[FLEX] Line=7, token=IDENTIFIER, value="y"
[BISON] Line=7, expression="Σύγκριση"

	[FLEX] Line=8, token=IDENTIFIER, value="x"
	[FLEX] Line=8, token=OPERATOR, value=">="
	[FLEX] Line=8, token=IDENTIFIER, value="y"
[BISON] Line=8, expression="Σύγκριση"

/*============= Test case [#2.2] : VARIABLES-STATEMENT =============*/	[FLEX] Line=13, token=KEYWORD, value="int"
	[FLEX] Line=13, token=IDENTIFIER, value="a"
	[FLEX] Line=13, token=DELIMITER, value=";"
[BISON] Line=13, expression=;

	[FLEX] Line=14, token=KEYWORD, value="double"
	[FLEX] Line=14, token=IDENTIFIER, value="var"
	[FLEX] Line=14, token=DELIMITER, value=";"
[BISON] Line=14, expression=;

	[FLEX] Line=15, token=KEYWORD, value="float"
	[FLEX] Line=15, token=IDENTIFIER, value="c"
	[FLEX] Line=15, token=DELIMITER, value=";"
[BISON] Line=15, expression=;

	[FLEX] Line=16, token=KEYWORD, value="int"
	[FLEX] Line=16, token=IDENTIFIER, value="a"
	[FLEX] Line=16, token=SPECIAL, value=","
	[FLEX] Line=16, token=IDENTIFIER, value="b"
	[FLEX] Line=16, token=SPECIAL, value=","
	[FLEX] Line=16, token=IDENTIFIER, value="c"
	[FLEX] Line=16, token=DELIMITER, value=";"
[BISON] Line=16, expression=;

	[FLEX] Line=17, token=KEYWORD, value="long"
	[FLEX] Line=17, token=IDENTIFIER, value="var1"
	[FLEX] Line=17, token=SPECIAL, value=","
	[FLEX] Line=17, token=IDENTIFIER, value="var2"
	[FLEX] Line=17, token=SPECIAL, value=","
	[FLEX] Line=17, token=IDENTIFIER, value="var3"
	[FLEX] Line=17, token=SPECIAL, value=","
	[FLEX] Line=17, token=IDENTIFIER, value="var4"
	[FLEX] Line=17, token=DELIMITER, value=";"
[BISON] Line=17, expression=;

	[FLEX] Line=18, token=KEYWORD, value="short"
	[FLEX] Line=18, token=IDENTIFIER, value="sh1"
	[FLEX] Line=18, token=DELIMITER, value=";"
[BISON] Line=18, expression=;

/*============= Test case [#2.3] : ARRAYS =============*/	[FLEX] Line=23, token=IDENTIFIER, value="pin1"
	[FLEX] Line=23, token=OPERATOR, value="="
	[FLEX] Line=23, token=SPECIAL, value="["
	[FLEX] Line=23, token=INTEGER, value="1"
	[FLEX] Line=23, token=SPECIAL, value=","
	[FLEX] Line=23, token=INTEGER, value="2"
	[FLEX] Line=23, token=SPECIAL, value=","
	[FLEX] Line=23, token=INTEGER, value="3"
	[FLEX] Line=23, token=SPECIAL, value=","
	[FLEX] Line=23, token=INTEGER, value="4"
	[FLEX] Line=23, token=SPECIAL, value=","
	[FLEX] Line=23, token=INTEGER, value="5"
	[FLEX] Line=23, token=SPECIAL, value="]"
	[FLEX] Line=23, token=DELIMITER, value=";"
[BISON] Line=23, expression="Ανάθεση τιμής σε μεταβλητή"

	[FLEX] Line=24, token=IDENTIFIER, value="pin2"
	[FLEX] Line=24, token=OPERATOR, value="="
	[FLEX] Line=24, token=SPECIAL, value="["
	[FLEX] Line=24, token=STRING, value=""a""
	[FLEX] Line=24, token=SPECIAL, value=","
	[FLEX] Line=24, token=STRING, value=""b""
	[FLEX] Line=24, token=SPECIAL, value=","
	[FLEX] Line=24, token=STRING, value=""c""
	[FLEX] Line=24, token=SPECIAL, value=","
	[FLEX] Line=24, token=STRING, value=""d""
	[FLEX] Line=24, token=SPECIAL, value="]"
	[FLEX] Line=24, token=DELIMITER, value=";"
[BISON] Line=24, expression="Ανάθεση τιμής σε μεταβλητή"

/*============= Test case [#2.4] : BUILD-IN-FUNCTIONS =============*/// --- Test case [#2.4.1] : SCAN ---
	[FLEX] Line=30, token=FUNCTION, value="scan"
	[FLEX] Line=30, token=SPECIAL, value="("
	[FLEX] Line=30, token=IDENTIFIER, value="x"
	[FLEX] Line=30, token=SPECIAL, value=")"
	[FLEX] Line=30, token=DELIMITER, value=";"
[BISON] Line=30, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=31, token=FUNCTION, value="scan"
	[FLEX] Line=31, token=SPECIAL, value="("
	[FLEX] Line=31, token=IDENTIFIER, value="MyVariable"
	[FLEX] Line=31, token=SPECIAL, value=")"
	[FLEX] Line=31, token=DELIMITER, value=";"
[BISON] Line=31, expression="Ενσωματωμένη απλή συνάρτηση"

// --- Test case [#2.4.2] : LEN ---
	[FLEX] Line=35, token=FUNCTION, value="len"
	[FLEX] Line=35, token=SPECIAL, value="("
	[FLEX] Line=35, token=SPECIAL, value="["
	[FLEX] Line=35, token=INTEGER, value="10"
	[FLEX] Line=35, token=SPECIAL, value=","
	[FLEX] Line=35, token=INTEGER, value="20"
	[FLEX] Line=35, token=SPECIAL, value=","
	[FLEX] Line=35, token=INTEGER, value="30"
	[FLEX] Line=35, token=SPECIAL, value=","
	[FLEX] Line=35, token=INTEGER, value="40"
	[FLEX] Line=35, token=SPECIAL, value=","
	[FLEX] Line=35, token=INTEGER, value="50"
	[FLEX] Line=35, token=SPECIAL, value="]"
	[FLEX] Line=35, token=SPECIAL, value=")"
	[FLEX] Line=35, token=DELIMITER, value=";"
[BISON] Line=35, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=36, token=FUNCTION, value="len"
	[FLEX] Line=36, token=SPECIAL, value="("
	[FLEX] Line=36, token=STRING, value=""Τhis is a string""
	[FLEX] Line=36, token=SPECIAL, value=")"
	[FLEX] Line=36, token=DELIMITER, value=";"
[BISON] Line=36, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=37, token=FUNCTION, value="len"
	[FLEX] Line=37, token=SPECIAL, value="("
	[FLEX] Line=37, token=IDENTIFIER, value="StringVariable"
	[FLEX] Line=37, token=SPECIAL, value=")"
	[FLEX] Line=37, token=DELIMITER, value=";"
[BISON] Line=37, expression="Ενσωματωμένη απλή συνάρτηση"

// --- Test case [#2.4.3] : CMP ---
	[FLEX] Line=41, token=FUNCTION, value="cmp"
	[FLEX] Line=41, token=SPECIAL, value="("
	[FLEX] Line=41, token=STRING, value=""test""
	[FLEX] Line=41, token=SPECIAL, value=","
	[FLEX] Line=41, token=STRING, value=""best""
	[FLEX] Line=41, token=SPECIAL, value=")"
	[FLEX] Line=41, token=DELIMITER, value=";"
[BISON] Line=41, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=42, token=FUNCTION, value="cmp"
	[FLEX] Line=42, token=SPECIAL, value="("
	[FLEX] Line=42, token=IDENTIFIER, value="str1"
	[FLEX] Line=42, token=SPECIAL, value=","
	[FLEX] Line=42, token=IDENTIFIER, value="str2"
	[FLEX] Line=42, token=SPECIAL, value=")"
	[FLEX] Line=42, token=DELIMITER, value=";"
[BISON] Line=42, expression="Ενσωματωμένη απλή συνάρτηση"

// --- Test case [#2.4.4] : PRINT ---
	[FLEX] Line=46, token=FUNCTION, value="print"
	[FLEX] Line=46, token=SPECIAL, value="("
	[FLEX] Line=46, token=STRING, value=""Hello World""
	[FLEX] Line=46, token=SPECIAL, value=")"
	[FLEX] Line=46, token=DELIMITER, value=";"
[BISON] Line=46, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=47, token=FUNCTION, value="print"
	[FLEX] Line=47, token=SPECIAL, value="("
	[FLEX] Line=47, token=IDENTIFIER, value="x"
	[FLEX] Line=47, token=SPECIAL, value=","
	[FLEX] Line=47, token=STRING, value=""=""
	[FLEX] Line=47, token=SPECIAL, value=","
	[FLEX] Line=47, token=INTEGER, value="100"
	[FLEX] Line=47, token=SPECIAL, value=")"
	[FLEX] Line=47, token=DELIMITER, value=";"
[BISON] Line=47, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=48, token=FUNCTION, value="print"
	[FLEX] Line=48, token=SPECIAL, value="("
	[FLEX] Line=48, token=FUNCTION, value="cmp"
	[FLEX] Line=48, token=SPECIAL, value="("
	[FLEX] Line=48, token=IDENTIFIER, value="str1"
	[FLEX] Line=48, token=SPECIAL, value=","
	[FLEX] Line=48, token=IDENTIFIER, value="str2"
	[FLEX] Line=48, token=SPECIAL, value=")"
	[FLEX] Line=48, token=SPECIAL, value=")"
	[FLEX] Line=48, token=DELIMITER, value=";"
[BISON] Line=48, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=49, token=FUNCTION, value="print"
	[FLEX] Line=49, token=SPECIAL, value="("
	[FLEX] Line=49, token=FUNCTION, value="len"
	[FLEX] Line=49, token=SPECIAL, value="("
	[FLEX] Line=49, token=STRING, value=""This is a string""
	[FLEX] Line=49, token=SPECIAL, value=")"
	[FLEX] Line=49, token=SPECIAL, value=")"
	[FLEX] Line=49, token=DELIMITER, value=";"
[BISON] Line=49, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=50, token=FUNCTION, value="print"
	[FLEX] Line=50, token=SPECIAL, value="("
	[FLEX] Line=50, token=IDENTIFIER, value="pin"
	[FLEX] Line=50, token=SPECIAL, value="["
	[FLEX] Line=50, token=INTEGER, value="0"
	[FLEX] Line=50, token=SPECIAL, value="]"
	[FLEX] Line=50, token=SPECIAL, value=")"
	[FLEX] Line=50, token=DELIMITER, value=";"
[BISON] Line=50, expression="Ενσωματωμένη απλή συνάρτηση"

/*============= Test case [#2.5] : USER-FUNCTIONS =============*/	[FLEX] Line=55, token=KEYWORD, value="func"
	[FLEX] Line=55, token=IDENTIFIER, value="myfunc"
	[FLEX] Line=55, token=SPECIAL, value="("
	[FLEX] Line=55, token=SPECIAL, value=")"
	[FLEX] Line=56, token=SPECIAL, value="{"
	[FLEX] Line=57, token=SPECIAL, value="}"
[BISON] Line=57, expression="Δήλωση συναρτήσεων χρήστη"

	[FLEX] Line=58, token=KEYWORD, value="func"
	[FLEX] Line=58, token=IDENTIFIER, value="myfunc2"
	[FLEX] Line=58, token=SPECIAL, value="("
	[FLEX] Line=58, token=KEYWORD, value="int"
	[FLEX] Line=58, token=IDENTIFIER, value="paramA"
	[FLEX] Line=58, token=SPECIAL, value=","
	[FLEX] Line=58, token=KEYWORD, value="long"
	[FLEX] Line=58, token=IDENTIFIER, value="paramB"
	[FLEX] Line=58, token=SPECIAL, value=","
	[FLEX] Line=58, token=KEYWORD, value="short"
	[FLEX] Line=58, token=IDENTIFIER, value="paramC"
	[FLEX] Line=58, token=SPECIAL, value=")"
	[FLEX] Line=59, token=SPECIAL, value="{"
	[FLEX] Line=61, token=SPECIAL, value="}"
[BISON] Line=61, expression="Δήλωση συναρτήσεων χρήστη"

	[FLEX] Line=62, token=KEYWORD, value="func"
	[FLEX] Line=62, token=IDENTIFIER, value="main"
	[FLEX] Line=62, token=SPECIAL, value="("
	[FLEX] Line=62, token=SPECIAL, value=")"
	[FLEX] Line=63, token=SPECIAL, value="{"
	[FLEX] Line=64, token=FUNCTION, value="print"
	[FLEX] Line=64, token=SPECIAL, value="("
	[FLEX] Line=64, token=STRING, value=""Hello World\n""
	[FLEX] Line=64, token=SPECIAL, value=")"
	[FLEX] Line=64, token=DELIMITER, value=";"
	[FLEX] Line=65, token=SPECIAL, value="}"
[BISON] Line=65, expression="Δήλωση συναρτήσεων χρήστη"

/*============= Test case [#2.6] : EXPRESSIONS =============*/// --- Test case [#2.6.1] : ARITHMETIC-EXPRESSIONS ---
	[FLEX] Line=71, token=IDENTIFIER, value="a1"
	[FLEX] Line=71, token=OPERATOR, value="*"
	[FLEX] Line=71, token=IDENTIFIER, value="a2"
[BISON] Line=71, expression="Αριθμητική έκφραση"

	[FLEX] Line=72, token=IDENTIFIER, value="a3"
	[FLEX] Line=72, token=OPERATOR, value="+"
	[FLEX] Line=72, token=IDENTIFIER, value="a4"
[BISON] Line=72, expression="Αριθμητική έκφραση"

	[FLEX] Line=73, token=OPERATOR, value="-"
	[FLEX] Line=73, token=INTEGER, value="5"
	[FLEX] Line=73, token=OPERATOR, value="+"
	[FLEX] Line=73, token=INTEGER, value="10"
[BISON] Line=73, expression="Αριθμητική έκφραση"

	[FLEX] Line=74, token=INTEGER, value="15"
	[FLEX] Line=74, token=OPERATOR, value="+"
	[FLEX] Line=74, token=IDENTIFIER, value="a5"
	[FLEX] Line=74, token=OPERATOR, value="-"
	[FLEX] Line=74, token=INTEGER, value="9"
[BISON] Line=74, expression="Αριθμητική έκφραση"

	[FLEX] Line=75, token=OPERATOR, value="+"
	[FLEX] Line=75, token=INTEGER, value="5"
	[FLEX] Line=75, token=OPERATOR, value="-"
	[FLEX] Line=75, token=IDENTIFIER, value="a1"
	[FLEX] Line=75, token=OPERATOR, value="-"
	[FLEX] Line=75, token=INTEGER, value="16"
[BISON] Line=75, expression="Αριθμητική έκφραση"

	[FLEX] Line=76, token=OPERATOR, value="+"
	[FLEX] Line=76, token=INTEGER, value="10"
	[FLEX] Line=76, token=OPERATOR, value="-"
	[FLEX] Line=76, token=INTEGER, value="5"
	[FLEX] Line=76, token=OPERATOR, value="+"
	[FLEX] Line=76, token=IDENTIFIER, value="myvar"
	[FLEX] Line=76, token=OPERATOR, value="-"
	[FLEX] Line=76, token=IDENTIFIER, value="myvar2"
[BISON] Line=76, expression="Αριθμητική έκφραση"

// --- Test case [#2.6.2] : VARIABLES-INITIALIZE ---
	[FLEX] Line=80, token=IDENTIFIER, value="x1"
	[FLEX] Line=80, token=OPERATOR, value="="
	[FLEX] Line=80, token=INTEGER, value="0"
	[FLEX] Line=80, token=DELIMITER, value=";"
[BISON] Line=80, expression="Ανάθεση τιμής σε μεταβλητή"

	[FLEX] Line=81, token=IDENTIFIER, value="x1"
	[FLEX] Line=81, token=SPECIAL, value=","
	[FLEX] Line=81, token=IDENTIFIER, value="x2"
	[FLEX] Line=81, token=OPERATOR, value="="
	[FLEX] Line=81, token=INTEGER, value="0"
	[FLEX] Line=81, token=SPECIAL, value=","
	[FLEX] Line=81, token=INTEGER, value="1"
	[FLEX] Line=81, token=DELIMITER, value=";"
[BISON] Line=81, expression="Ανάθεση τιμής σε μεταβλητή"

	[FLEX] Line=82, token=IDENTIFIER, value="x1"
	[FLEX] Line=82, token=SPECIAL, value=","
	[FLEX] Line=82, token=IDENTIFIER, value="list1"
	[FLEX] Line=82, token=OPERATOR, value="="
	[FLEX] Line=82, token=INTEGER, value="0"
	[FLEX] Line=82, token=SPECIAL, value=","
	[FLEX] Line=82, token=SPECIAL, value="["
	[FLEX] Line=82, token=STRING, value=""A""
	[FLEX] Line=82, token=SPECIAL, value=","
	[FLEX] Line=82, token=STRING, value=""B""
	[FLEX] Line=82, token=SPECIAL, value=","
	[FLEX] Line=82, token=STRING, value=""C""
	[FLEX] Line=82, token=SPECIAL, value="]"
	[FLEX] Line=82, token=DELIMITER, value=";"
[BISON] Line=82, expression="Ανάθεση τιμής σε μεταβλητή"

	[FLEX] Line=83, token=IDENTIFIER, value="x1"
	[FLEX] Line=83, token=SPECIAL, value=","
	[FLEX] Line=83, token=IDENTIFIER, value="list1"
	[FLEX] Line=83, token=SPECIAL, value=","
	[FLEX] Line=83, token=IDENTIFIER, value="string"
	[FLEX] Line=83, token=OPERATOR, value="="
	[FLEX] Line=83, token=INTEGER, value="0"
	[FLEX] Line=83, token=SPECIAL, value=","
	[FLEX] Line=83, token=SPECIAL, value="["
	[FLEX] Line=83, token=STRING, value=""A""
	[FLEX] Line=83, token=SPECIAL, value=","
	[FLEX] Line=83, token=STRING, value=""B""
	[FLEX] Line=83, token=SPECIAL, value=","
	[FLEX] Line=83, token=STRING, value=""C""
	[FLEX] Line=83, token=SPECIAL, value="]"
	[FLEX] Line=83, token=SPECIAL, value=","
	[FLEX] Line=83, token=STRING, value=""HELLO""
	[FLEX] Line=83, token=DELIMITER, value=";"
[BISON] Line=83, expression="Ανάθεση τιμής σε μεταβλητή"

// --- Test case [#2.6.3] : ARRAY-MERGE ---
	[FLEX] Line=87, token=SPECIAL, value="["
	[FLEX] Line=87, token=INTEGER, value="1"
	[FLEX] Line=87, token=SPECIAL, value=","
	[FLEX] Line=87, token=INTEGER, value="2"
	[FLEX] Line=87, token=SPECIAL, value=","
	[FLEX] Line=87, token=INTEGER, value="3"
	[FLEX] Line=87, token=SPECIAL, value="]"
	[FLEX] Line=87, token=OPERATOR, value="+"
	[FLEX] Line=87, token=SPECIAL, value="["
	[FLEX] Line=87, token=INTEGER, value="4"
	[FLEX] Line=87, token=SPECIAL, value=","
	[FLEX] Line=87, token=INTEGER, value="5"
	[FLEX] Line=87, token=SPECIAL, value=","
	[FLEX] Line=87, token=INTEGER, value="6"
	[FLEX] Line=87, token=SPECIAL, value="]"
[BISON] Line=87, expression="Συνένωση Πινάκων"

	[FLEX] Line=88, token=SPECIAL, value="["
	[FLEX] Line=88, token=INTEGER, value="1"
	[FLEX] Line=88, token=SPECIAL, value=","
	[FLEX] Line=88, token=INTEGER, value="3"
	[FLEX] Line=88, token=SPECIAL, value="]"
	[FLEX] Line=88, token=OPERATOR, value="+"
	[FLEX] Line=88, token=SPECIAL, value="["
	[FLEX] Line=88, token=INTEGER, value="5"
	[FLEX] Line=88, token=SPECIAL, value=","
	[FLEX] Line=88, token=INTEGER, value="7"
	[FLEX] Line=88, token=SPECIAL, value=","
	[FLEX] Line=88, token=INTEGER, value="9"
	[FLEX] Line=88, token=SPECIAL, value=","
	[FLEX] Line=88, token=INTEGER, value="11"
	[FLEX] Line=88, token=SPECIAL, value="]"
[BISON] Line=88, expression="Συνένωση Πινάκων"

// --- Test case [#2.6.4] : COMPARISONS ---
	[FLEX] Line=92, token=IDENTIFIER, value="x1"
	[FLEX] Line=92, token=OPERATOR, value=">"
	[FLEX] Line=92, token=IDENTIFIER, value="x2"
[BISON] Line=92, expression="Σύγκριση"

	[FLEX] Line=93, token=IDENTIFIER, value="a"
	[FLEX] Line=93, token=OPERATOR, value="<="
	[FLEX] Line=93, token=IDENTIFIER, value="b"
[BISON] Line=93, expression="Σύγκριση"

	[FLEX] Line=94, token=IDENTIFIER, value="myvar"
	[FLEX] Line=94, token=OPERATOR, value="=="
	[FLEX] Line=94, token=INTEGER, value="52"
[BISON] Line=94, expression="Σύγκριση"

/*============= Test case [#2.7] : STATEMENTS =============*/// --- Test case [#2.7.1] : IF-STATEMENTS ---
	[FLEX] Line=100, token=KEYWORD, value="if"
	[FLEX] Line=100, token=SPECIAL, value="("
	[FLEX] Line=100, token=IDENTIFIER, value="var"
	[FLEX] Line=100, token=OPERATOR, value="=="
	[FLEX] Line=100, token=INTEGER, value="100"
	[FLEX] Line=100, token=SPECIAL, value=")"
	[FLEX] Line=100, token=FUNCTION, value="print"
	[FLEX] Line=100, token=SPECIAL, value="("
	[FLEX] Line=100, token=STRING, value=""Value of expression is 100""
	[FLEX] Line=100, token=SPECIAL, value=")"
	[FLEX] Line=100, token=DELIMITER, value=";"
[BISON] Line=100, expression="Δήλωση if"

	[FLEX] Line=101, token=KEYWORD, value="if"
	[FLEX] Line=101, token=SPECIAL, value="("
	[FLEX] Line=101, token=IDENTIFIER, value="x"
	[FLEX] Line=101, token=OPERATOR, value="<"
	[FLEX] Line=101, token=IDENTIFIER, value="y"
	[FLEX] Line=101, token=OPERATOR, value="<"
	[FLEX] Line=101, token=IDENTIFIER, value="z"
	[FLEX] Line=101, token=SPECIAL, value=")"
	[FLEX] Line=101, token=SPECIAL, value="{"
	[FLEX] Line=101, token=FUNCTION, value="print"
	[FLEX] Line=101, token=SPECIAL, value="("
	[FLEX] Line=101, token=IDENTIFIER, value="x"
	[FLEX] Line=101, token=SPECIAL, value=")"
	[FLEX] Line=101, token=DELIMITER, value=";"
	[FLEX] Line=101, token=FUNCTION, value="print"
	[FLEX] Line=101, token=SPECIAL, value="("
	[FLEX] Line=101, token=IDENTIFIER, value="y"
	[FLEX] Line=101, token=SPECIAL, value=")"
	[FLEX] Line=101, token=DELIMITER, value=";"
	[FLEX] Line=101, token=FUNCTION, value="print"
	[FLEX] Line=101, token=SPECIAL, value="("
	[FLEX] Line=101, token=IDENTIFIER, value="z"
	[FLEX] Line=101, token=SPECIAL, value=")"
	[FLEX] Line=101, token=DELIMITER, value=";"
	[FLEX] Line=101, token=SPECIAL, value="}"
[BISON] Line=101, expression="Δήλωση if"

	[FLEX] Line=103, token=KEYWORD, value="if"
	[FLEX] Line=103, token=SPECIAL, value="("
	[FLEX] Line=103, token=IDENTIFIER, value="x"
	[FLEX] Line=103, token=OPERATOR, value="=="
	[FLEX] Line=103, token=INTEGER, value="1"
	[FLEX] Line=103, token=SPECIAL, value=")"
	[FLEX] Line=104, token=SPECIAL, value="{"
	[FLEX] Line=105, token=KEYWORD, value="int"
	[FLEX] Line=105, token=IDENTIFIER, value="i"
	[FLEX] Line=105, token=DELIMITER, value=";"
	[FLEX] Line=106, token=IDENTIFIER, value="i"
	[FLEX] Line=106, token=OPERATOR, value="="
	[FLEX] Line=106, token=INTEGER, value="1"
	[FLEX] Line=106, token=DELIMITER, value=";"
	[FLEX] Line=107, token=KEYWORD, value="if"
	[FLEX] Line=107, token=SPECIAL, value="("
	[FLEX] Line=107, token=IDENTIFIER, value="i"
	[FLEX] Line=107, token=OPERATOR, value=">"
	[FLEX] Line=107, token=INTEGER, value="1"
	[FLEX] Line=107, token=SPECIAL, value=")"
	[FLEX] Line=108, token=FUNCTION, value="print"
	[FLEX] Line=108, token=SPECIAL, value="("
	[FLEX] Line=108, token=STRING, value=""MIHALI GIATI EISAI TOSO STOKOS????""
	[FLEX] Line=108, token=SPECIAL, value=")"
	[FLEX] Line=108, token=DELIMITER, value=";"
	[FLEX] Line=109, token=SPECIAL, value="}"
[BISON] Line=109, expression="Δήλωση if"

// --- Test case [#2.7.2] : WHILE-STATEMENTS ---
	[FLEX] Line=112, token=KEYWORD, value="while"
	[FLEX] Line=112, token=SPECIAL, value="("
	[FLEX] Line=112, token=IDENTIFIER, value="i"
	[FLEX] Line=112, token=OPERATOR, value="<"
	[FLEX] Line=112, token=INTEGER, value="10"
	[FLEX] Line=112, token=SPECIAL, value=")"
	[FLEX] Line=113, token=SPECIAL, value="{"
	[FLEX] Line=114, token=FUNCTION, value="print"
	[FLEX] Line=114, token=SPECIAL, value="("
	[FLEX] Line=114, token=STRING, value=""i is: ""
	[FLEX] Line=114, token=SPECIAL, value=","
	[FLEX] Line=114, token=IDENTIFIER, value="i"
	[FLEX] Line=114, token=SPECIAL, value=")"
	[FLEX] Line=114, token=DELIMITER, value=";"
	[FLEX] Line=115, token=SPECIAL, value="}"
[BISON] Line=115, expression="Δήλωση while"

// --- Test case [#2.7.3] : FOR-STATEMENTS ---
	[FLEX] Line=118, token=KEYWORD, value="for"
	[FLEX] Line=118, token=SPECIAL, value="("
	[FLEX] Line=118, token=IDENTIFIER, value="i"
	[FLEX] Line=118, token=OPERATOR, value="="
	[FLEX] Line=118, token=INTEGER, value="0"
	[FLEX] Line=118, token=DELIMITER, value=";"
	[FLEX] Line=118, token=IDENTIFIER, value="i"
	[FLEX] Line=118, token=OPERATOR, value="<"
	[FLEX] Line=118, token=INTEGER, value="10"
	[FLEX] Line=118, token=DELIMITER, value=";"
	[FLEX] Line=118, token=IDENTIFIER, value="i"
	[FLEX] Line=118, token=OPERATOR, value="++"
	[FLEX] Line=118, token=SPECIAL, value=")"
	[FLEX] Line=119, token=SPECIAL, value="{"
	[FLEX] Line=120, token=FUNCTION, value="print"
	[FLEX] Line=120, token=SPECIAL, value="("
	[FLEX] Line=120, token=STRING, value=""i = ""
	[FLEX] Line=120, token=SPECIAL, value=","
	[FLEX] Line=120, token=IDENTIFIER, value="i"
	[FLEX] Line=120, token=SPECIAL, value=")"
	[FLEX] Line=120, token=DELIMITER, value=";"
	[FLEX] Line=121, token=SPECIAL, value="}"
[BISON] Line=121, expression="Δήλωση for"


[0] ΑΡΧΕΙΟ ΕΙΣΟΔΟΥ: Η ΑΝΑΛΥΣΗ ΕΠΙΤΥΧΘΗΚΕ.
