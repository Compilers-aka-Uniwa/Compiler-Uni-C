/*============= Test case [#2.1] : CODE-STRUCTURE =============*//*============= Test case [#2.2] : VARIABLES-STATEMENT =============*/	[FLEX] Line=6, token=KEYWORD, value="int"
	[FLEX] Line=6, token=IDENTIFIER, value="a"
	[FLEX] Line=6, token=DELIMITER, value=";"
[BISON] Line=6, expression="Δήλωση Μεταβλητής"

	[FLEX] Line=7, token=KEYWORD, value="double"
	[FLEX] Line=7, token=IDENTIFIER, value="var"
	[FLEX] Line=7, token=DELIMITER, value=";"
[BISON] Line=7, expression="Δήλωση Μεταβλητής"

	[FLEX] Line=8, token=KEYWORD, value="float"
	[FLEX] Line=8, token=IDENTIFIER, value="c"
	[FLEX] Line=8, token=DELIMITER, value=";"
[BISON] Line=8, expression="Δήλωση Μεταβλητής"

	[FLEX] Line=9, token=KEYWORD, value="int"
	[FLEX] Line=9, token=IDENTIFIER, value="a"
	[FLEX] Line=9, token=SPECIAL, value=","
	[FLEX] Line=9, token=IDENTIFIER, value="b"
	[FLEX] Line=9, token=SPECIAL, value=","
	[FLEX] Line=9, token=IDENTIFIER, value="c"
	[FLEX] Line=9, token=DELIMITER, value=";"
[BISON] Line=9, expression="Δήλωση Μεταβλητής"

	[FLEX] Line=10, token=KEYWORD, value="long"
	[FLEX] Line=10, token=IDENTIFIER, value="var1"
	[FLEX] Line=10, token=SPECIAL, value=","
	[FLEX] Line=10, token=IDENTIFIER, value="var2"
	[FLEX] Line=10, token=SPECIAL, value=","
	[FLEX] Line=10, token=IDENTIFIER, value="var3"
	[FLEX] Line=10, token=SPECIAL, value=","
	[FLEX] Line=10, token=IDENTIFIER, value="var4"
	[FLEX] Line=10, token=DELIMITER, value=";"
[BISON] Line=10, expression="Δήλωση Μεταβλητής"

	[FLEX] Line=11, token=KEYWORD, value="short"
	[FLEX] Line=11, token=IDENTIFIER, value="sh1"
	[FLEX] Line=11, token=DELIMITER, value=";"
[BISON] Line=11, expression="Δήλωση Μεταβλητής"

/*============= Test case [#2.3] : ARRAYS =============*/	[FLEX] Line=15, token=IDENTIFIER, value="pin1"
	[FLEX] Line=15, token=OPERATOR, value="="
	[FLEX] Line=15, token=SPECIAL, value="["
	[FLEX] Line=15, token=INTEGER, value="1"
	[FLEX] Line=15, token=SPECIAL, value=","
	[FLEX] Line=15, token=INTEGER, value="2"
	[FLEX] Line=15, token=SPECIAL, value=","
	[FLEX] Line=15, token=INTEGER, value="3"
	[FLEX] Line=15, token=SPECIAL, value=","
	[FLEX] Line=15, token=INTEGER, value="4"
	[FLEX] Line=15, token=SPECIAL, value=","
	[FLEX] Line=15, token=INTEGER, value="5"
	[FLEX] Line=15, token=SPECIAL, value="]"
	[FLEX] Line=15, token=DELIMITER, value=";"
[BISON] Line=15, expression="Ανάθεση τιμής σε μεταβλητή"

	[FLEX] Line=16, token=IDENTIFIER, value="pin2"
	[FLEX] Line=16, token=OPERATOR, value="="
	[FLEX] Line=16, token=SPECIAL, value="["
	[FLEX] Line=16, token=STRING, value=""a""
	[FLEX] Line=16, token=SPECIAL, value=","
	[FLEX] Line=16, token=STRING, value=""b""
	[FLEX] Line=16, token=SPECIAL, value=","
	[FLEX] Line=16, token=STRING, value=""c""
	[FLEX] Line=16, token=SPECIAL, value=","
	[FLEX] Line=16, token=STRING, value=""d""
	[FLEX] Line=16, token=SPECIAL, value="]"
	[FLEX] Line=16, token=DELIMITER, value=";"
[BISON] Line=16, expression="Ανάθεση τιμής σε μεταβλητή"

/*============= Test case [#2.4] : BUILD-IN-FUNCTIONS =============*//* --- Test case [#2.4.1] : SCAN --- */	[FLEX] Line=21, token=FUNCTION, value="scan"
	[FLEX] Line=21, token=SPECIAL, value="("
	[FLEX] Line=21, token=IDENTIFIER, value="x"
	[FLEX] Line=21, token=SPECIAL, value=")"
	[FLEX] Line=21, token=DELIMITER, value=";"
[BISON] Line=21, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=22, token=FUNCTION, value="scan"
	[FLEX] Line=22, token=SPECIAL, value="("
	[FLEX] Line=22, token=IDENTIFIER, value="MyVariable"
	[FLEX] Line=22, token=SPECIAL, value=")"
	[FLEX] Line=22, token=DELIMITER, value=";"
[BISON] Line=22, expression="Ενσωματωμένη απλή συνάρτηση"

/* --- Test case [#2.4.2] : LEN --- */	[FLEX] Line=26, token=FUNCTION, value="len"
	[FLEX] Line=26, token=SPECIAL, value="("
	[FLEX] Line=26, token=SPECIAL, value="["
	[FLEX] Line=26, token=INTEGER, value="10"
	[FLEX] Line=26, token=SPECIAL, value=","
	[FLEX] Line=26, token=INTEGER, value="20"
	[FLEX] Line=26, token=SPECIAL, value=","
	[FLEX] Line=26, token=INTEGER, value="30"
	[FLEX] Line=26, token=SPECIAL, value=","
	[FLEX] Line=26, token=INTEGER, value="40"
	[FLEX] Line=26, token=SPECIAL, value=","
	[FLEX] Line=26, token=INTEGER, value="50"
	[FLEX] Line=26, token=SPECIAL, value="]"
	[FLEX] Line=26, token=SPECIAL, value=")"
	[FLEX] Line=26, token=DELIMITER, value=";"
[BISON] Line=26, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=27, token=FUNCTION, value="len"
	[FLEX] Line=27, token=SPECIAL, value="("
	[FLEX] Line=27, token=STRING, value=""Τhis is a string""
	[FLEX] Line=27, token=SPECIAL, value=")"
	[FLEX] Line=27, token=DELIMITER, value=";"
[BISON] Line=27, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=28, token=FUNCTION, value="len"
	[FLEX] Line=28, token=SPECIAL, value="("
	[FLEX] Line=28, token=IDENTIFIER, value="StringVariable"
	[FLEX] Line=28, token=SPECIAL, value=")"
	[FLEX] Line=28, token=DELIMITER, value=";"
[BISON] Line=28, expression="Ενσωματωμένη απλή συνάρτηση"

/* --- Test case [#2.4.3] : CMP --- */	[FLEX] Line=32, token=FUNCTION, value="cmp"
	[FLEX] Line=32, token=SPECIAL, value="("
	[FLEX] Line=32, token=STRING, value=""test""
	[FLEX] Line=32, token=SPECIAL, value=","
	[FLEX] Line=32, token=STRING, value=""best""
	[FLEX] Line=32, token=SPECIAL, value=")"
	[FLEX] Line=32, token=DELIMITER, value=";"
[BISON] Line=32, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=33, token=FUNCTION, value="cmp"
	[FLEX] Line=33, token=SPECIAL, value="("
	[FLEX] Line=33, token=IDENTIFIER, value="str1"
	[FLEX] Line=33, token=SPECIAL, value=","
	[FLEX] Line=33, token=IDENTIFIER, value="str2"
	[FLEX] Line=33, token=SPECIAL, value=")"
	[FLEX] Line=33, token=DELIMITER, value=";"
[BISON] Line=33, expression="Ενσωματωμένη απλή συνάρτηση"

/* --- Test case [#2.4.4] : PRINT --- */	[FLEX] Line=37, token=FUNCTION, value="print"
	[FLEX] Line=37, token=SPECIAL, value="("
	[FLEX] Line=37, token=STRING, value=""Hello World""
	[FLEX] Line=37, token=SPECIAL, value=")"
	[FLEX] Line=37, token=DELIMITER, value=";"
[BISON] Line=37, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=38, token=FUNCTION, value="print"
	[FLEX] Line=38, token=SPECIAL, value="("
	[FLEX] Line=38, token=IDENTIFIER, value="x"
	[FLEX] Line=38, token=SPECIAL, value=","
	[FLEX] Line=38, token=STRING, value=""=""
	[FLEX] Line=38, token=SPECIAL, value=","
	[FLEX] Line=38, token=INTEGER, value="100"
	[FLEX] Line=38, token=SPECIAL, value=")"
	[FLEX] Line=38, token=DELIMITER, value=";"
[BISON] Line=38, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=39, token=FUNCTION, value="print"
	[FLEX] Line=39, token=SPECIAL, value="("
	[FLEX] Line=39, token=FUNCTION, value="cmp"
	[FLEX] Line=39, token=SPECIAL, value="("
	[FLEX] Line=39, token=IDENTIFIER, value="str1"
	[FLEX] Line=39, token=SPECIAL, value=","
	[FLEX] Line=39, token=IDENTIFIER, value="str2"
	[FLEX] Line=39, token=SPECIAL, value=")"
	[FLEX] Line=39, token=SPECIAL, value=")"
	[FLEX] Line=39, token=DELIMITER, value=";"
[BISON] Line=39, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=40, token=FUNCTION, value="print"
	[FLEX] Line=40, token=SPECIAL, value="("
	[FLEX] Line=40, token=FUNCTION, value="len"
	[FLEX] Line=40, token=SPECIAL, value="("
	[FLEX] Line=40, token=STRING, value=""This is a string""
	[FLEX] Line=40, token=SPECIAL, value=")"
	[FLEX] Line=40, token=SPECIAL, value=")"
	[FLEX] Line=40, token=DELIMITER, value=";"
[BISON] Line=40, expression="Ενσωματωμένη απλή συνάρτηση"

	[FLEX] Line=41, token=FUNCTION, value="print"
	[FLEX] Line=41, token=SPECIAL, value="("
	[FLEX] Line=41, token=IDENTIFIER, value="pin"
	[FLEX] Line=41, token=SPECIAL, value="["
	[FLEX] Line=41, token=INTEGER, value="0"
	[FLEX] Line=41, token=SPECIAL, value="]"
	[FLEX] Line=41, token=SPECIAL, value=")"
	[FLEX] Line=41, token=DELIMITER, value=";"
[BISON] Line=41, expression="Ενσωματωμένη απλή συνάρτηση"

/*============= Test case [#2.5] : USER-FUNCTIONS =============*/	[FLEX] Line=45, token=KEYWORD, value="func"
	[FLEX] Line=45, token=IDENTIFIER, value="myfunc"
	[FLEX] Line=45, token=SPECIAL, value="("
	[FLEX] Line=45, token=SPECIAL, value=")"
	[FLEX] Line=46, token=SPECIAL, value="{"
	[FLEX] Line=47, token=SPECIAL, value="}"
[BISON] Line=47, expression="Δήλωση συναρτήσεων χρήστη"

	[FLEX] Line=48, token=KEYWORD, value="func"
	[FLEX] Line=48, token=IDENTIFIER, value="myfunc2"
	[FLEX] Line=48, token=SPECIAL, value="("
	[FLEX] Line=48, token=KEYWORD, value="int"
	[FLEX] Line=48, token=IDENTIFIER, value="paramA"
	[FLEX] Line=48, token=SPECIAL, value=","
	[FLEX] Line=48, token=KEYWORD, value="long"
	[FLEX] Line=48, token=IDENTIFIER, value="paramB"
	[FLEX] Line=48, token=SPECIAL, value=","
	[FLEX] Line=48, token=KEYWORD, value="short"
	[FLEX] Line=48, token=IDENTIFIER, value="paramC"
	[FLEX] Line=48, token=SPECIAL, value=")"
	[FLEX] Line=49, token=SPECIAL, value="{"
	[FLEX] Line=51, token=SPECIAL, value="}"
[BISON] Line=51, expression="Δήλωση συναρτήσεων χρήστη"

	[FLEX] Line=52, token=KEYWORD, value="func"
	[FLEX] Line=52, token=IDENTIFIER, value="main"
	[FLEX] Line=52, token=SPECIAL, value="("
	[FLEX] Line=52, token=SPECIAL, value=")"
	[FLEX] Line=53, token=SPECIAL, value="{"
	[FLEX] Line=54, token=FUNCTION, value="print"
	[FLEX] Line=54, token=SPECIAL, value="("
	[FLEX] Line=54, token=STRING, value=""Hello World\n""
	[FLEX] Line=54, token=SPECIAL, value=")"
	[FLEX] Line=54, token=DELIMITER, value=";"
	[FLEX] Line=55, token=SPECIAL, value="}"
[BISON] Line=55, expression="Δήλωση συναρτήσεων χρήστη"

/*============= Test case [#2.6] : EXPRESSIONS =============*//* --- Test case [#2.6.1] : ARITHMETIC-EXPRESSIONS --- */	[FLEX] Line=60, token=IDENTIFIER, value="a1"
	[FLEX] Line=60, token=OPERATOR, value="*"
	[FLEX] Line=60, token=IDENTIFIER, value="a2"
[BISON] Line=60, expression="Αριθμητική έκφραση"

	[FLEX] Line=61, token=IDENTIFIER, value="a3"
	[FLEX] Line=61, token=OPERATOR, value="+"
	[FLEX] Line=61, token=IDENTIFIER, value="a4"
[BISON] Line=61, expression="Αριθμητική έκφραση"

	[FLEX] Line=62, token=OPERATOR, value="-"
	[FLEX] Line=62, token=INTEGER, value="5"
	[FLEX] Line=62, token=OPERATOR, value="+"
	[FLEX] Line=62, token=INTEGER, value="10"
[BISON] Line=62, expression="Αριθμητική έκφραση"

	[FLEX] Line=63, token=INTEGER, value="15"
	[FLEX] Line=63, token=OPERATOR, value="+"
	[FLEX] Line=63, token=IDENTIFIER, value="a5"
	[FLEX] Line=63, token=OPERATOR, value="-"
	[FLEX] Line=63, token=INTEGER, value="9"
[BISON] Line=63, expression="Αριθμητική έκφραση"

	[FLEX] Line=64, token=OPERATOR, value="+"
	[FLEX] Line=64, token=INTEGER, value="5"
	[FLEX] Line=64, token=OPERATOR, value="-"
	[FLEX] Line=64, token=IDENTIFIER, value="a1"
	[FLEX] Line=64, token=OPERATOR, value="-"
	[FLEX] Line=64, token=INTEGER, value="16"
[BISON] Line=64, expression="Αριθμητική έκφραση"

	[FLEX] Line=65, token=OPERATOR, value="+"
	[FLEX] Line=65, token=INTEGER, value="10"
	[FLEX] Line=65, token=OPERATOR, value="-"
	[FLEX] Line=65, token=INTEGER, value="5"
	[FLEX] Line=65, token=OPERATOR, value="+"
	[FLEX] Line=65, token=IDENTIFIER, value="myvar"
	[FLEX] Line=65, token=OPERATOR, value="-"
	[FLEX] Line=65, token=IDENTIFIER, value="myvar2"
[BISON] Line=65, expression="Αριθμητική έκφραση"

/* --- Test case [#2.6.2] : VARIABLES-INITIALIZE --- */	[FLEX] Line=69, token=IDENTIFIER, value="x1"
	[FLEX] Line=69, token=OPERATOR, value="="
	[FLEX] Line=69, token=INTEGER, value="0"
	[FLEX] Line=69, token=DELIMITER, value=";"
[BISON] Line=69, expression="Ανάθεση τιμής σε μεταβλητή"

	[FLEX] Line=70, token=IDENTIFIER, value="x1"
	[FLEX] Line=70, token=SPECIAL, value=","
	[FLEX] Line=70, token=IDENTIFIER, value="x2"
	[FLEX] Line=70, token=OPERATOR, value="="
	[FLEX] Line=70, token=INTEGER, value="0"
	[FLEX] Line=70, token=SPECIAL, value=","
	[FLEX] Line=70, token=INTEGER, value="1"
	[FLEX] Line=70, token=DELIMITER, value=";"
[BISON] Line=70, expression="Ανάθεση τιμής σε μεταβλητή"

	[FLEX] Line=71, token=IDENTIFIER, value="x1"
	[FLEX] Line=71, token=SPECIAL, value=","
	[FLEX] Line=71, token=IDENTIFIER, value="list1"
	[FLEX] Line=71, token=OPERATOR, value="="
	[FLEX] Line=71, token=INTEGER, value="0"
	[FLEX] Line=71, token=SPECIAL, value=","
	[FLEX] Line=71, token=SPECIAL, value="["
	[FLEX] Line=71, token=STRING, value=""A""
	[FLEX] Line=71, token=SPECIAL, value=","
	[FLEX] Line=71, token=STRING, value=""B""
	[FLEX] Line=71, token=SPECIAL, value=","
	[FLEX] Line=71, token=STRING, value=""C""
	[FLEX] Line=71, token=SPECIAL, value="]"
	[FLEX] Line=71, token=DELIMITER, value=";"
[BISON] Line=71, expression="Ανάθεση τιμής σε μεταβλητή"

	[FLEX] Line=72, token=IDENTIFIER, value="x1"
	[FLEX] Line=72, token=SPECIAL, value=","
	[FLEX] Line=72, token=IDENTIFIER, value="list1"
	[FLEX] Line=72, token=SPECIAL, value=","
	[FLEX] Line=72, token=IDENTIFIER, value="string"
	[FLEX] Line=72, token=OPERATOR, value="="
	[FLEX] Line=72, token=INTEGER, value="0"
	[FLEX] Line=72, token=SPECIAL, value=","
	[FLEX] Line=72, token=SPECIAL, value="["
	[FLEX] Line=72, token=STRING, value=""A""
	[FLEX] Line=72, token=SPECIAL, value=","
	[FLEX] Line=72, token=STRING, value=""B""
	[FLEX] Line=72, token=SPECIAL, value=","
	[FLEX] Line=72, token=STRING, value=""C""
	[FLEX] Line=72, token=SPECIAL, value="]"
	[FLEX] Line=72, token=SPECIAL, value=","
	[FLEX] Line=72, token=STRING, value=""HELLO""
	[FLEX] Line=72, token=DELIMITER, value=";"
[BISON] Line=72, expression="Ανάθεση τιμής σε μεταβλητή"

/* --- Test case [#2.6.3] : ARRAY-MERGE --- */	[FLEX] Line=76, token=SPECIAL, value="["
	[FLEX] Line=76, token=INTEGER, value="1"
	[FLEX] Line=76, token=SPECIAL, value=","
	[FLEX] Line=76, token=INTEGER, value="2"
	[FLEX] Line=76, token=SPECIAL, value=","
	[FLEX] Line=76, token=INTEGER, value="3"
	[FLEX] Line=76, token=SPECIAL, value="]"
	[FLEX] Line=76, token=OPERATOR, value="+"
	[FLEX] Line=76, token=SPECIAL, value="["
	[FLEX] Line=76, token=INTEGER, value="4"
	[FLEX] Line=76, token=SPECIAL, value=","
	[FLEX] Line=76, token=INTEGER, value="5"
	[FLEX] Line=76, token=SPECIAL, value=","
	[FLEX] Line=76, token=INTEGER, value="6"
	[FLEX] Line=76, token=SPECIAL, value="]"
[BISON] Line=76, expression="Συνένωση Πινάκων"

	[FLEX] Line=77, token=SPECIAL, value="["
	[FLEX] Line=77, token=INTEGER, value="1"
	[FLEX] Line=77, token=SPECIAL, value=","
	[FLEX] Line=77, token=INTEGER, value="3"
	[FLEX] Line=77, token=SPECIAL, value="]"
	[FLEX] Line=77, token=OPERATOR, value="+"
	[FLEX] Line=77, token=SPECIAL, value="["
	[FLEX] Line=77, token=INTEGER, value="5"
	[FLEX] Line=77, token=SPECIAL, value=","
	[FLEX] Line=77, token=INTEGER, value="7"
	[FLEX] Line=77, token=SPECIAL, value=","
	[FLEX] Line=77, token=INTEGER, value="9"
	[FLEX] Line=77, token=SPECIAL, value=","
	[FLEX] Line=77, token=INTEGER, value="11"
	[FLEX] Line=77, token=SPECIAL, value="]"
[BISON] Line=77, expression="Συνένωση Πινάκων"

/* --- Test case [#2.6.4] : COMPARISONS --- */	[FLEX] Line=81, token=IDENTIFIER, value="x1"
	[FLEX] Line=81, token=OPERATOR, value=">"
	[FLEX] Line=81, token=IDENTIFIER, value="x2"
[BISON] Line=81, expression="Σύγκριση"

	[FLEX] Line=82, token=IDENTIFIER, value="a"
	[FLEX] Line=82, token=OPERATOR, value="<="
	[FLEX] Line=82, token=IDENTIFIER, value="b"
[BISON] Line=82, expression="Σύγκριση"

	[FLEX] Line=83, token=IDENTIFIER, value="myvar"
	[FLEX] Line=83, token=OPERATOR, value="=="
	[FLEX] Line=83, token=INTEGER, value="52"
[BISON] Line=83, expression="Σύγκριση"

/*============= Test case [#2.7] : STATEMENTS =============*//* --- Test case [#2.7.1] : IF-STATEMENTS --- */	[FLEX] Line=88, token=KEYWORD, value="if"
	[FLEX] Line=88, token=SPECIAL, value="("
	[FLEX] Line=88, token=IDENTIFIER, value="var"
	[FLEX] Line=88, token=OPERATOR, value="=="
	[FLEX] Line=88, token=INTEGER, value="100"
	[FLEX] Line=88, token=SPECIAL, value=")"
	[FLEX] Line=88, token=FUNCTION, value="print"
	[FLEX] Line=88, token=SPECIAL, value="("
	[FLEX] Line=88, token=STRING, value=""Value of expression is 100""
	[FLEX] Line=88, token=SPECIAL, value=")"
	[FLEX] Line=88, token=DELIMITER, value=";"
[BISON] Line=88, expression="Δήλωση if"

	[FLEX] Line=89, token=KEYWORD, value="if"
	[FLEX] Line=89, token=SPECIAL, value="("
	[FLEX] Line=89, token=IDENTIFIER, value="x"
	[FLEX] Line=89, token=OPERATOR, value="<"
	[FLEX] Line=89, token=IDENTIFIER, value="y"
	[FLEX] Line=89, token=OPERATOR, value="<"
	[FLEX] Line=89, token=IDENTIFIER, value="z"
	[FLEX] Line=89, token=SPECIAL, value=")"
	[FLEX] Line=89, token=SPECIAL, value="{"
	[FLEX] Line=89, token=FUNCTION, value="print"
	[FLEX] Line=89, token=SPECIAL, value="("
	[FLEX] Line=89, token=IDENTIFIER, value="x"
	[FLEX] Line=89, token=SPECIAL, value=")"
	[FLEX] Line=89, token=DELIMITER, value=";"
	[FLEX] Line=89, token=FUNCTION, value="print"
	[FLEX] Line=89, token=SPECIAL, value="("
	[FLEX] Line=89, token=IDENTIFIER, value="y"
	[FLEX] Line=89, token=SPECIAL, value=")"
	[FLEX] Line=89, token=DELIMITER, value=";"
	[FLEX] Line=89, token=FUNCTION, value="print"
	[FLEX] Line=89, token=SPECIAL, value="("
	[FLEX] Line=89, token=IDENTIFIER, value="z"
	[FLEX] Line=89, token=SPECIAL, value=")"
	[FLEX] Line=89, token=DELIMITER, value=";"
	[FLEX] Line=89, token=SPECIAL, value="}"
[BISON] Line=89, expression="Δήλωση if"

	[FLEX] Line=91, token=KEYWORD, value="if"
	[FLEX] Line=91, token=SPECIAL, value="("
	[FLEX] Line=91, token=IDENTIFIER, value="x"
	[FLEX] Line=91, token=OPERATOR, value="=="
	[FLEX] Line=91, token=INTEGER, value="0"
	[FLEX] Line=91, token=SPECIAL, value=")"
	[FLEX] Line=92, token=SPECIAL, value="{"
	[FLEX] Line=93, token=KEYWORD, value="int"
	[FLEX] Line=93, token=IDENTIFIER, value="i"
	[FLEX] Line=93, token=DELIMITER, value=";"
	[FLEX] Line=94, token=IDENTIFIER, value="i"
	[FLEX] Line=94, token=OPERATOR, value="="
	[FLEX] Line=94, token=INTEGER, value="1"
	[FLEX] Line=94, token=DELIMITER, value=";"
	[FLEX] Line=95, token=KEYWORD, value="if"
	[FLEX] Line=95, token=SPECIAL, value="("
	[FLEX] Line=95, token=IDENTIFIER, value="i"
	[FLEX] Line=95, token=OPERATOR, value=">"
	[FLEX] Line=95, token=INTEGER, value="1"
	[FLEX] Line=95, token=SPECIAL, value=")"
	[FLEX] Line=96, token=FUNCTION, value="print"
	[FLEX] Line=96, token=SPECIAL, value="("
	[FLEX] Line=96, token=STRING, value=""i is greater than 1""
	[FLEX] Line=96, token=SPECIAL, value=")"
	[FLEX] Line=96, token=DELIMITER, value=";"
	[FLEX] Line=97, token=SPECIAL, value="}"
[BISON] Line=97, expression="Δήλωση if"

/* --- Test case [#2.7.2] : WHILE-STATEMENTS --- */	[FLEX] Line=100, token=KEYWORD, value="while"
	[FLEX] Line=100, token=SPECIAL, value="("
	[FLEX] Line=100, token=IDENTIFIER, value="i"
	[FLEX] Line=100, token=OPERATOR, value="<"
	[FLEX] Line=100, token=INTEGER, value="10"
	[FLEX] Line=100, token=SPECIAL, value=")"
	[FLEX] Line=101, token=SPECIAL, value="{"
	[FLEX] Line=102, token=FUNCTION, value="print"
	[FLEX] Line=102, token=SPECIAL, value="("
	[FLEX] Line=102, token=STRING, value=""i is: ""
	[FLEX] Line=102, token=SPECIAL, value=","
	[FLEX] Line=102, token=IDENTIFIER, value="i"
	[FLEX] Line=102, token=SPECIAL, value=")"
	[FLEX] Line=102, token=DELIMITER, value=";"
	[FLEX] Line=103, token=SPECIAL, value="}"
[BISON] Line=103, expression="Δήλωση while"

/* --- Test case [#2.7.3] : FOR-STATEMENTS --- */	[FLEX] Line=106, token=KEYWORD, value="for"
	[FLEX] Line=106, token=SPECIAL, value="("
	[FLEX] Line=106, token=IDENTIFIER, value="i"
	[FLEX] Line=106, token=OPERATOR, value="="
	[FLEX] Line=106, token=INTEGER, value="0"
	[FLEX] Line=106, token=DELIMITER, value=";"
	[FLEX] Line=106, token=IDENTIFIER, value="i"
	[FLEX] Line=106, token=OPERATOR, value="<"
	[FLEX] Line=106, token=INTEGER, value="10"
	[FLEX] Line=106, token=DELIMITER, value=";"
	[FLEX] Line=106, token=IDENTIFIER, value="i"
	[FLEX] Line=106, token=OPERATOR, value="++"
	[FLEX] Line=106, token=SPECIAL, value=")"
	[FLEX] Line=107, token=SPECIAL, value="{"
	[FLEX] Line=108, token=FUNCTION, value="print"
	[FLEX] Line=108, token=SPECIAL, value="("
	[FLEX] Line=108, token=STRING, value=""i = ""
	[FLEX] Line=108, token=SPECIAL, value=","
	[FLEX] Line=108, token=IDENTIFIER, value="i"
	[FLEX] Line=108, token=SPECIAL, value=")"
	[FLEX] Line=108, token=DELIMITER, value=";"
	[FLEX] Line=109, token=SPECIAL, value="}"
[BISON] Line=109, expression="Δήλωση for"


ΑΡΧΕΙΟ ΕΙΣΟΔΟΥ     : Η ΑΝΑΛΥΣΗ ΕΠΙΤΥΧΘΗΚΕ.
ΚΩΔΙΚΟΣ ΚΑΤΑΣΤΑΣΗΣ : 0
