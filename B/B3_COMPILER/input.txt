/*============= Test case [#2.2] : VARIABLES-STATEMENT =============*/

int a;
double var;
float c;
int a, b, c;
long var1,var2,var3,var4;
short sh1;

/*============= Test case [#2.3] : ARRAYS =============*/

pin1 = [1, 2, 3, 4, 5 ]; 
pin2 = ["a", "b", "c", "d"];
pin3 = [4.5, 4e1, 4E-1, 0e0, 5.67];
pin4 = [a, b, c, d];

/*============= Test case [#2.4] : BUILD-IN-FUNCTIONS =============*/
/* --- Test case [#2.4.1] : SCAN --- */

scan(x);
scan(MyVariable);

/* --- Test case [#2.4.2] : LEN --- */

len([10, 20, 30, 40, 50]);
len("Î¤his is a string");
len(StringVariable);

/* --- Test case [#2.4.3] : CMP --- */

cmp("test", "best");
cmp(str1, str2);

/* --- Test case [#2.4.4] : PRINT --- */

print("Hello World");
print(x, "=", 100);
print(cmp(str1, str2));
print(len("This is a string"));
print(pin[0]);

/*============= Test case [#2.5] : USER-FUNCTIONS =============*/

func myfunc()
{
}
func myfunc2(int paramA, long paramB, short paramC)
{

}
func main()
{
    print("Hello World\n");
}

/*============= Test case [#2.6] : EXPRESSIONS =============*/
/* --- Test case [#2.6.1] : ARITHMETIC-EXPRESSIONS --- */

a1 * a2
a3 + a4
-5 + 10
15 + a5 - 9
+5 - a1 -16
+10 -5 + myvar - myvar2
5 % 1 / 2
+1 -4 / 7
-varA +varB * 1

/* --- Test case [#2.6.2] : VARIABLES-INITIALIZE --- */

x1=0;
x1, x2 = 0, 1;
x1, list1 = 0, ["A", "B", "C"];
x1, list1, string = 0, ["A", "B", "C"], "HELLO";
var++;
++var;
--var;
var--;
list1 += [1, 2, 3];
x -= 4e1;
y *= 6.7;
c /= b;

/* --- Test case [#2.6.3] : ARRAY-MERGE --- */

[1, 2, 3] + [4, 5, 6]
[1, 3] + [5, 7, 9, 11]
["What", "a"] + ["Wonderful", "World"]
[4.5, 5.6, 1.1] + [0e0, 4.5E-1, 4E0]

/* --- Test case [#2.6.4] : COMPARISONS --- */

x1 > x2
a < b
myvar >= 52
var1 <= var2
isEven == isOdd
a != C
isTrue1 || isTrue2
isFalse1 && isFalse2
!not

/*============= Test case [#2.7] : STATEMENTS =============*/
/* --- Test case [#2.7.1] : IF-STATEMENTS --- */

if (var == 100) print("Value of expression is 100"); 
if (x < y < z) { print(x);  print(y);  print(z);  } 

if (x == 0) 
{
    int i;
    i = 1;
    if (i > 1)
        print("i is greater than 1");
}

/* --- Test case [#2.7.2] : WHILE-STATEMENTS --- */
while (i < 10)
{
print("i is: ", i);
}

/* --- Test case [#2.7.3] : FOR-STATEMENTS --- */
for (i = 0; i < 10; i++)
{
print("i = ", i);
}

/*============= Test case [#2.8] : WARNINGS =============*/
/* --- Test case [#2.8.1] : DOUBLE COMPARE --- */

x >> y
x << y

/* --- Test case [#2.8.2] : DOUBLE PARENTHESIS --- */

if ((x == 0)) 
{
}
while ((y == 0)) 
{
}

/* --- Test case [#2.8.3] : RETURN TYPE IN FUNCTIONS --- */

func int main() 
{
}
func float avg(int parA, int parB) 
{ 
    calc_avg(parA, parB); 
}
func double pi() 
{ 
    print("3.14"); 
}

/* --- Test case [#2.8.4] : INVALID INPUT IN MERGE ARRAYS --- */

[3, 4, 6] # + [1, 5, 6]
[1,2,8] + $ [7,9,1]

/* --- Test case [#2.8.5] : DOUBLE USE OF KEYWORD IN DELCARATION --- */

int int x;
float float y;
double double far;
short short imp;

/*============= Test case [#2.9] : ERRORS =============*/

intx a;
pin1 = [1, 3, "Hello", 4, 5];
scan(&x);
len(1variable);
cmp(x, 5);
printf("Avg is %f", avg);
func myFunc(long x, short y) {
    int c;
    c = x / y;
    return c;
}
myFunc(x, y, 10);
5++;
x -= "Hello";
y *= [h, e, l, l, o];
50 = x;
list1, list2 = [x, b, c], 5;
x1 === x2;
array += [1,3,4];
[1,3,5] ++ [1,2];
if var == 100:
    print("var", "is", var);
while(1) 
{
    print("Hello Wolrld\n");
}
for(;;) 
{
    print("Hello World\n");
}

/*============= Test case [#2.10] : FINAL =============*/
func myAdd(int num1, int num2)
{
    int sum;
    sum = a + b;
    print("Sum is: ", sum);
}

func main()
{
    int a;
    int b;
    scan(a);
    scan(b);
    myAdd(a,b);
}

func errorHandling()
{
    long a, b, c, d, e;
    int i;
    int x;

    scan(a, b, c, d, e);
    pin1 = [a, b, c];
    pin2 = [d, e];
    pinFinal = [a, b, c] + $[d, e];

    for(i = 0; i < pinFinal.N; i++) 
    {
        x = pinFinal[i];
        x /= 2;
        if ((x == 0))
            print("%d is Even\n", pinFinal[i]);
    }
}
